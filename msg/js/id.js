// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.id');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Tambahkan sebuah comment";
Blockly.Msg.AUTH = "Please authorize this app to enable your work to be saved and to allow it to be shared by you.";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Ubah nilai:";
Blockly.Msg.CHAT = "Chat with your collaborator by typing in this box!";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Tutup blok";
Blockly.Msg.COLLAPSE_BLOCK = "Tutup blok";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "Warna 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "Warna 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "rasio";
Blockly.Msg.COLOUR_BLEND_TITLE = "Tertutup";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "mencampur dua warna secara bersamaan dengan perbandingan (0.0-1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Pilih warna dari daftar warna.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "Warna acak";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Pilih warna secara acak.";
Blockly.Msg.COLOUR_RGB_BLUE = "biru";
Blockly.Msg.COLOUR_RGB_GREEN = "hijau";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "merah";
Blockly.Msg.COLOUR_RGB_TITLE = "Dengan warna";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Buatlah warna dengan jumlah yang ditentukan dari merah, hijau dan biru. Semua nilai harus antarai 0 sampai 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "Keluar dari perulangan";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "Lanjutkan dengan langkah penggulangan berikutnya";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Keluar sementara dari perulanggan.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Abaikan sisa dari loop ini, dan lanjutkan dengan iterasi berikutnya.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Peringatan: Blok ini hanya dapat digunakan dalam loop.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each for each block";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "di dalam list";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "untuk setiap item";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Untuk tiap-tiap item di dalam list, tetapkan variabel '%1' ke dalam item, selanjutnya kerjakan beberapa statement.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "dari %1 ke %2 dengan step / penambahan %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "Cacah dengan";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Menggunakan variabel %1 dengan mengambil nilai dari batas awal hingga ke batas akhir, dengan interval tertentu, dan mengerjakan block tertentu.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "tambahkan prasyarat ke dalam blok IF.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Terakhir, tambahkan tangkap-semua kondisi kedalam blok jika (if).";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Menambahkan, menghapus, atau menyusun kembali bagian untuk mengkonfigurasi blok IF ini.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "else";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "else if";
Blockly.Msg.CONTROLS_IF_MSG_IF = "Jika";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "jika nilainya benar maka kerjakan perintah berikutnya.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "jika nilainya benar, maka kerjakan blok perintah yang pertama. Jika tidak, kerjakan blok perintah yang kedua.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Jika nilai pertama adalah benar (true), maka lakukan perintah-perintah yang berada didalam blok pertama. Jika nilai kedua adalah benar (true), maka lakukan perintah-perintah yang berada didalam blok kedua.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Jika blok pertama adalah benar (true), maka lakukan perintah-perintah yang berada  didalam blok pertama. Atau jika blok kedua adalah benar (true), maka lakukan perintah-perintah yang berada didalam blok kedua.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "kerjakan";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "ulangi %1 kali";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "ulangi";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "kali";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Lakukan beberapa perintah beberapa kali.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "Ulangi sampai";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "Ulangi jika";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Jika sementara nilai tidak  benar (false), maka lakukan beberapa perintah.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Jika sementara nilai benar (true), maka lakukan beberapa perintah.";
Blockly.Msg.DELETE_BLOCK = "Hapus blok";
Blockly.Msg.DELETE_X_BLOCKS = "Hapus %1 blok";
Blockly.Msg.DISABLE_BLOCK = "Nonaktifkan blok";
Blockly.Msg.DUPLICATE_BLOCK = "Duplikat";
Blockly.Msg.ENABLE_BLOCK = "Aktifkan blok";
Blockly.Msg.EXPAND_ALL = "Kembangkan blok-blok";
Blockly.Msg.EXPAND_BLOCK = "Kembangkan blok";
Blockly.Msg.EXTERNAL_INPUTS = "Input-input eksternal";
Blockly.Msg.HELP = "Tolong";
Blockly.Msg.INLINE_INPUTS = "Input inline";
Blockly.Msg.KF_ANIMATION_BOOLEAN_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_BOOLEAN_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_CURRENT_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_CURRENT_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_CURRENT_TOOLTIP = "Returns the current animation that is playing on this game object.";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_MESSAGE_AFTER = "animation frame";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_MESSAGE_BEFORE = "goto";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_TOOLTIP = "Goes to the selected frame in the current animation. If at the end of an animation it will go to the first frame, or the start if at the end.";  // untranslated
Blockly.Msg.KF_ANIMATION_NUMBERS_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_NUMBERS_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_NUMBERS_TOOLTIP = "Returns a number related to the selected field..";  // untranslated
Blockly.Msg.KF_ANIMATION_PLAY_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_PLAY_MESSAGE = "play animation";  // untranslated
Blockly.Msg.KF_ANIMATION_PLAY_TOOLTIP = "Starts playing an animation on this gameobject.";  // untranslated
Blockly.Msg.KF_ANIMATION_STATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_STATE_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_STATE_TOOLTIP = " The state of the current animation.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_BOOLEAN_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_BOOLEAN_TOOLTIP = "Returns the state of a property selected.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_MESSAGE_AFTER = "side";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_MESSAGE_BEFORE = "on";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_TOOLTIP = "Returns a Boolean indiciating the state of the selected statement for this gameobject.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_GRAVITY_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_GRAVITY_MESSAGE = "gravity";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_GRAVITY_TOOLTIP = "Returns the selected gravity value.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_NUMERIC_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_NUMERIC_TOOLTIP = "Returns a value for the selected property.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_MESSAGE_ONE = "collidable object of";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_MESSAGE_THREE = "and is on the layer";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_MESSAGE_TWO = "side exists at";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_TOOLTIP = "Returns a boolean indiciating if a colliable object (with the collision shape AND layer as passed) exists at the coordinates passed.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_MESSAGE = "collidable object exists at";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_TOOLTIP = "Returns a boolean indiciating if a colliable object exists at the cooridnates passed. ";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_BOOLEAN_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_BOOLEAN_MESSAGE = "set";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_BOOLEAN_TOOLTIP = "Sets a boolean property selected.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_MESSAGE_AFTER = "side collisions to";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_MESSAGE_BEFORE = "set";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_TOOLTIP = "Sets the sides of this gameobject that can collide with other gameobjects.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_GRAVITY_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_GRAVITY_MESSAGE = "set gravity";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_GRAVITY_TOOLTIP = "Sets the global gravity property to a value passed.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_NUMERIC_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_NUMERIC_MESSAGE = "set";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_NUMERIC_TOOLTIP = "Sets a numeric property selected.";  // untranslated
Blockly.Msg.KF_BLOCK_DEPRECATED = "Warning: This block is being discontinued";  // untranslated
Blockly.Msg.KF_CAMERA_CENTER_ON_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_CENTER_ON_INSTANCE_MESSAGE = "center camera on";  // untranslated
Blockly.Msg.KF_CAMERA_CENTER_ON_INSTANCE_TOOLTIP = "Centers the cameras to the instances current position.";  // untranslated
Blockly.Msg.KF_CAMERA_GET_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_GET_MESSAGE = "camera";  // untranslated
Blockly.Msg.KF_CAMERA_GET_READ_ONLY_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_GET_READ_ONLY_MESSAGE = "camera";  // untranslated
Blockly.Msg.KF_CAMERA_GET_READ_ONLY_TOOLTIP = "Returns a selected read only property on the camera.";  // untranslated
Blockly.Msg.KF_CAMERA_GET_SPEED_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_GET_SPEED_MESSAGE = "camera pan speed";  // untranslated
Blockly.Msg.KF_CAMERA_GET_SPEED_TOOLTIP = "Returns the cameras pan speed.";  // untranslated
Blockly.Msg.KF_CAMERA_GET_TOOLTIP = "Returns a selected property on the camera.";  // untranslated
Blockly.Msg.KF_CAMERA_LOCK_ON_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_LOCK_ON_MESSAGE = "lock camera on";  // untranslated
Blockly.Msg.KF_CAMERA_LOCK_ON_TOOLTIP = "Locks the camera to an Instance passed.";  // untranslated
Blockly.Msg.KF_CAMERA_PAN_TO_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_PAN_TO_MESSAGE = "camera to";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_GET_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_GET_MESSAGE = "camera scale";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_GET_TOOLTIP = "Returns the values for the cameras scale on the selected axis.";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_MESSAGE = "camera scale";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_TOOLTIP = "Sets the camera scale on the selected axis to a value passed.";  // untranslated
Blockly.Msg.KF_CAMERA_SET_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SET_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_CAMERA_SET_MESSAGE_BEFORE = "set camera";  // untranslated
Blockly.Msg.KF_CAMERA_SET_SPEED_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SET_SPEED_MESSAGE = "set camera pan speed";  // untranslated
Blockly.Msg.KF_CAMERA_SET_SPEED_TOOLTIP = "Sets the cameras pan speed to a value passed.";  // untranslated
Blockly.Msg.KF_CAMERA_SET_TOOLTIP = "Sets a selected property on the camera to the value passed.";  // untranslated
Blockly.Msg.KF_CAMERA_STATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_STATE_MESSAGE = "is camera";  // untranslated
Blockly.Msg.KF_CAMERA_STATE_TOOLTIP = "Returns true if the statement is correct.";  // untranslated
Blockly.Msg.KF_CAMERA_UNLOCK_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_UNLOCK_MESSAGE = "unlock camera";  // untranslated
Blockly.Msg.KF_CAMERA_UNLOCK_TOOLTIP = "Unlocks the camera.";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_MESSAGE_AFTER = "at";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_MESSAGE_BEFORE = "create new instance of";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_TOOLTIP = "Creates a new instance of a class type at the location specified.";  // untranslated
Blockly.Msg.KF_CLASSES_GET_ALL_INSTANCES_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_GET_ALL_INSTANCES_MESSAGE = "get all instances of";  // untranslated
Blockly.Msg.KF_CLASSES_GET_ALL_INSTANCES_TOOLTIP = "Returns a list of all the instances with that class.";  // untranslated
Blockly.Msg.KF_CLASSES_GET_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_GET_INSTANCE_MESSAGE = "instance of";  // untranslated
Blockly.Msg.KF_CLASSES_GET_INSTANCE_TOOLTIP = "Selects the corresponding instance.";  // untranslated
Blockly.Msg.KF_CLASSES_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_INSTANCE_MESSAGE = "class of";  // untranslated
Blockly.Msg.KF_CLASSES_INSTANCE_TOOLTIP = "Returns the class of the selected instance.";  // untranslated
Blockly.Msg.KF_CLASSES_SELECTOR_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_SELECTOR_TOOLTIP = "Returns the class selected.";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_MESSAGE_AFTER = "has";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_MESSAGE_BEFORE = "When the animation";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_TOOLTIP = "Fires events when a selected event occurs on the animation passed.";  // untranslated
Blockly.Msg.KF_EVENT_CONSTANTLY_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_CONSTANTLY_MESSAGE = "Constantly";  // untranslated
Blockly.Msg.KF_EVENT_CONSTANTLY_TOOLTIP = "The event triggered every frame";  // untranslated
Blockly.Msg.KF_EVENT_CREATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_CREATE_MESSAGE = "When created";  // untranslated
Blockly.Msg.KF_EVENT_CREATE_TOOLTIP = "The event triggered when this game object is created";  // untranslated
Blockly.Msg.KF_EVENT_INST_INPUT_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_INST_INPUT_MESSAGE = "When the player ";  // untranslated
Blockly.Msg.KF_EVENT_INST_INPUT_TOOLTIP = "The event is triggered when the player releases/presses (click/touch) a given instance";  // untranslated
Blockly.Msg.KF_EVENT_INST_PRESS_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_INST_PRESS_MESSAGE = "When the player presses on ";  // untranslated
Blockly.Msg.KF_EVENT_INST_PRESS_TOOLTIP = "The event triggered when the player presses a click/touch on the given instance.";  // untranslated
Blockly.Msg.KF_EVENT_INST_RELEASE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_INST_RELEASE_MESSAGE = "When the player releases over ";  // untranslated
Blockly.Msg.KF_EVENT_INST_RELEASE_TOOLTIP = "The event triggered when the player releases a click/touch on the given instance.";  // untranslated
Blockly.Msg.KF_EVENT_KEY_INPUT_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_KEY_INPUT_MESSAGE = "When the player";  // untranslated
Blockly.Msg.KF_EVENT_KEY_INPUT_TOOLTIP = "The event is triggered when the player presses/releases the given key on their keyboard.";  // untranslated
Blockly.Msg.KF_EVENT_KEY_PRESS_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_KEY_PRESS_MESSAGE = "When the player presses";  // untranslated
Blockly.Msg.KF_EVENT_KEY_PRESS_TOOLTIP = "The event triggered when the player presses the given key on their keyboard.";  // untranslated
Blockly.Msg.KF_EVENT_KEY_RELEASE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_KEY_RELEASE_MESSAGE = "When the player releases";  // untranslated
Blockly.Msg.KF_EVENT_KEY_RELEASE_TOOLTIP = "The event triggered when the player releases the given key on their keyboard.";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_MESSAGE_AFTER = "is retrieved";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_MESSAGE_BEFORE = "When a message of";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_TOOLTIP = "Send events when the player";  // untranslated
Blockly.Msg.KF_EVENT_REMOVE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_REMOVE_MESSAGE = "When removed";  // untranslated
Blockly.Msg.KF_EVENT_REMOVE_TOOLTIP = "The event is triggered when this gameobject is destroyed.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_INPUT_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_INPUT_MESSAGE = "When the stage is";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_INPUT_TOOLTIP = "The event is trggered when the player either pressed or releases anywhere in the game scene.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_PRESS_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_PRESS_MESSAGE = "When stage is pressed";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_PRESS_TOOLTIP = "The event triggered when the player presses a click/touch down anywhere in the game scene.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_RELEASE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_RELEASE_MESSAGE = "When stage is released";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_RELEASE_TOOLTIP = "The event triggered when the player releases a click/touch anywhere in the game scene.";  // untranslated
Blockly.Msg.KF_EVENT_TIME_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_TIME_MESSAGE_AFTER = "milliseconds";  // untranslated
Blockly.Msg.KF_EVENT_TIME_SINGLE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_TIME_SINGLE_MESSAGE_AFTER = "milliseconds have passed";  // untranslated
Blockly.Msg.KF_EVENT_TIME_SINGLE_TOOLTIP = "Triggers the inner blocks after the set period of time has occured. Warning: Does not check to see if the object was destroyed before the event fires.";  // untranslated
Blockly.Msg.KF_EVENT_TIME_TOOLTIP = "Triggers the event when the number of milliseconds set has passed. The number of milliseconds passed is not dynamic, meaning that it will not update once set.";  // untranslated
Blockly.Msg.KF_EVENT_TOUCH_ON_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_TOUCH_ON_MESSAGE = "When I am touched by";  // untranslated
Blockly.Msg.KF_EVENT_TOUCH_ON_TOOLTIP = "Triggers the inner blocks when this instance collides with the instance passed.";  // untranslated
Blockly.Msg.KF_GAME_GET_TIME_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_GET_TIME_MESSAGE = "time";  // untranslated
Blockly.Msg.KF_GAME_GET_TIME_TOOLTIP = "Returns the associate time method associated.";  // untranslated
Blockly.Msg.KF_GAME_GOTO_LEVEL_NUM_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_GOTO_LEVEL_NUM_MESSAGE = "go to";  // untranslated
Blockly.Msg.KF_GAME_GOTO_LEVEL_NUM_TOOLTIP = "Changes the current level to the level specified.";  // untranslated
Blockly.Msg.KF_GAME_LEVEL_SPECIAL_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_LEVEL_SPECIAL_TOOLTIP = "A list of special levels, they include previous/current/next and the first/last levels.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_COLOUR_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_COLOUR_MESSAGE = "stage colour";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_COLOUR_TOOLTIP = "Gets the colour of the game background.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_SIZE_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_SIZE_TOOLTIP = "Gets the size of the games viewport on the screen.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_COLOUR_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_COLOUR_MESSAGE = "set stage colour to";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_COLOUR_TOOLTIP = "Sets the colour of the game background.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_SIZE_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_SIZE_TOOLTIP = "Sets the size of the games viewport on the screen.";  // untranslated
Blockly.Msg.KF_GAME_TIME_METHOD_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_TIME_METHOD_MESSAGE = "time";  // untranslated
Blockly.Msg.KF_GAME_TIME_METHOD_TOOLTIP = "Pauses or resumes the clock, thus pausing/resume gameplay.";  // untranslated
Blockly.Msg.KF_INPUT_MOUSE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INPUT_MOUSE_MESSAGE = "of mouse";  // untranslated
Blockly.Msg.KF_INPUT_MOUSE_TOOLTIP = "The position of the mouse in the current level";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_MESSAGE_BEFORE = "tag";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_TOOLTIP = "Adds a tag passed to the given gameobject.";  // untranslated
Blockly.Msg.KF_INSTANCE_DEATH_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_DEATH_MESSAGE = "destroy";  // untranslated
Blockly.Msg.KF_INSTANCE_DEATH_TOOLTIP = "Destroys the selected instance. Destruction cannot be reverted!";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_ALL_BY_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_ALL_BY_TAG_MESSAGE = "get all children by tag";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_ALL_BY_TAG_TOOLTIP = "Returns a list of all the instances that have the tag passed.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_BY_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_BY_TAG_MESSAGE = "instance by tag";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_BY_TAG_TOOLTIP = "Returns a single instance by the tag passed.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_TOOLTIP = "Gets the value of a selected property of the given instance.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_VISIBLE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_VISIBLE_MESSAGE = "get visibility of";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_VISIBLE_TOOLTIP = "Returns visibility state of this gameobject. An alpha of zero is does not mean that the visiblity is false.";  // untranslated
Blockly.Msg.KF_INSTANCE_HAS_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_HAS_TAG_MESSAGE = "has tag";  // untranslated
Blockly.Msg.KF_INSTANCE_HAS_TAG_TOOLTIP = "Returns a boolean indicating if the gameobject has the tag or not.";  // untranslated
Blockly.Msg.KF_INSTANCE_MOVE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_MOVE_TOOLTIP = "Changes the depth (layer ordering) of an instance passed by the selected dropdown method.";  // untranslated
Blockly.Msg.KF_INSTANCE_SELECT_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SELECT_MESSAGE = "instance ";  // untranslated
Blockly.Msg.KF_INSTANCE_SELECT_TOOLTIP = "Selects a game object with the corresponding id.";  // untranslated
Blockly.Msg.KF_INSTANCE_SELF_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SELF_MESSAGE = "myself";  // untranslated
Blockly.Msg.KF_INSTANCE_SELF_TOOLTIP = "The game object that this script is attached to.";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_TOOLTIP = "Sets the selected property of a given instance to a new value.";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_MESSAGE_BEFORE = "set visibility of";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_TOOLTIP = "Sets whether the gameobject should be renderer or not. An alpha of zero is does not mean that the visiblity is false.";  // untranslated
Blockly.Msg.KF_INTERSECTS_CONTAINS_HELPURL = "";  // untranslated
Blockly.Msg.KF_INTERSECTS_CONTAINS_MESSAGE = "contains";  // untranslated
Blockly.Msg.KF_INTERSECTS_OVERLAPS_HELPURL = "";  // untranslated
Blockly.Msg.KF_INTERSECTS_OVERLAPS_MESSAGE = "overlaps";  // untranslated
Blockly.Msg.KF_INTERSECTS_OVERLAPS_TOOLTIP = "Checks to see if the two passed instances overlap.";  // untranslated
Blockly.Msg.KF_KEY_SPECIAL_HELPURL = "";  // untranslated
Blockly.Msg.KF_KEY_SPECIAL_MESSAGE = "key:";  // untranslated
Blockly.Msg.KF_KEY_SPECIAL_TOOLTIP = "A special keyboard key";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_BEFORE = "from";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_TOOLTIP = "Returns the selected value between two instances.";  // untranslated
Blockly.Msg.KF_MATH_UTILS_HELPURL = "";  // untranslated
Blockly.Msg.KF_MATH_UTILS_TOOLTIP = "";  // untranslated
Blockly.Msg.KF_MATH_XY_TO_XY_HELPURL = "";  // untranslated
Blockly.Msg.KF_MATH_XY_TO_XY_TOOLTIP = "Returns the selected value between an instance and a set of coordinates passed.";  // untranslated
Blockly.Msg.KF_MESSAGING_CLASS_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_CLASS_MESSAGE_AFTER = "to all";  // untranslated
Blockly.Msg.KF_MESSAGING_CLASS_TOOLTIP = "Sends a message to all instances of a class you pass.";  // untranslated
Blockly.Msg.KF_MESSAGING_EVERYONE_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_EVERYONE_MESSAGE = "send every gameobject a message of";  // untranslated
Blockly.Msg.KF_MESSAGING_EVERYONE_TOOLTIP = "Sends a message to every gameobject.";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_MESSAGE_BEFORE = "send message";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_TOOLTIP = "Sends a message to a singular instance you passed.";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_MESSAGE_AFTER = "to each instance in";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_MESSAGE_BEFORE = "send message";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_TOOLTIP = "Sends a message to every instance in a list.";  // untranslated
Blockly.Msg.KF_SOUND_BACKGROUND_STATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_BACKGROUND_STATE_MESSAGE = "music";  // untranslated
Blockly.Msg.KF_SOUND_BACKGROUND_STATE_TOOLTIP = "Pauses or resumes the current background track.";  // untranslated
Blockly.Msg.KF_SOUND_GET_MUTE_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_GET_MUTE_MESSAGE = "mute";  // untranslated
Blockly.Msg.KF_SOUND_GET_MUTE_TOOLTIP = "Sets the mute state of the selected piece of audio by a boolean passed.";  // untranslated
Blockly.Msg.KF_SOUND_GET_VOLUME_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_GET_VOLUME_MESSAGE = "get volume";  // untranslated
Blockly.Msg.KF_SOUND_GET_VOLUME_TOOLTIP = "Gets the volume of all sounds played. A number from 0 - 100.";  // untranslated
Blockly.Msg.KF_SOUND_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_BACKGROUND_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_BACKGROUND_MESSAGE = "play music";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_BACKGROUND_TOOLTIP = "Starts playing the specified music from the beginning.";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_EFFECT_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_EFFECT_MESSAGE = "play sound effect";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_EFFECT_TOOLTIP = "Plays the given sound effect once.";  // untranslated
Blockly.Msg.KF_SOUND_SET_MUTE_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_SET_MUTE_MESSAGE = "mute";  // untranslated
Blockly.Msg.KF_SOUND_SET_MUTE_TOOLTIP = "Sets the mute state of the selected piece of audio by a boolean passed.";  // untranslated
Blockly.Msg.KF_SOUND_SET_VOLUME_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_SET_VOLUME_MESSAGE = "set volume";  // untranslated
Blockly.Msg.KF_SOUND_SET_VOLUME_TOOLTIP = "Sets the volume of all sounds played. A number from 0 - 100.";  // untranslated
Blockly.Msg.KF_SOUND_STOP_BACKGROUND_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_STOP_BACKGROUND_MESSAGE = "stop the current music";  // untranslated
Blockly.Msg.KF_SOUND_STOP_BACKGROUND_TOOLTIP = "Stops playing the current music and clears the playhead. If resumed it will start from the beginning.";  // untranslated
Blockly.Msg.KF_SOUND_TOOLTIP = "A list of all the sounds included in the game.";  // untranslated
Blockly.Msg.KF_TYPE_BOOLEAN = "True/False";  // untranslated
Blockly.Msg.KF_TYPE_INSTANCE = "Instance";  // untranslated
Blockly.Msg.KF_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.KF_TYPE_STRING = "Text";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://en.wikipedia.org/wiki/Linked_list#Empty_lists";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "buat list kosong";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Mengembalikan daftar, dengan panjang 0, tidak berisi data";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "list";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Tambahkan, hapus, atau susun ulang bagian untuk mengkonfigurasi blok LIST (daftar) ini.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "buat daftar (list) dengan";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Tambahkan sebuah item ke daftar (list).";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Buat sebuah daftar (list) dengan sejumlah item.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "pertama";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# dari akhir";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "dapatkan";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "dapatkan dan hapus";
Blockly.Msg.LISTS_GET_INDEX_LAST = "terakhir";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "acak";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "Hapus";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Kembalikan item pertama dalam daftar (list).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Sisipkan item ke dalam posisi yang telah ditentukan didalam list (daftar). Item pertama adalah item yang terakhir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Sisipkan item ke dalam posisi yang telah ditentukan didalam list (daftar). Item pertama adalah item terakhir (yg paling akhir).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Mengembalikan item pertama dalam list (daftar).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Mengembalikan item acak dalam list (daftar).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Menghilangkan dan mengembalikan item pertama dalam list (daftar).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Menghilangkan dan mengembalikan barang di posisi tertentu dalam list (daftar).  #1 adalah item terakhir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Menghilangkan dan mengembalikan barang di posisi tertentu dalam list (daftar).  #1 adalah item pertama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Menghilangkan dan mengembalikan item terakhir dalam list (daftar).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Menghilangkan dan mengembalikan barang dengan acak dalam list (daftar).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Menghapus item pertama dalam daftar.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Menghapus item dengan posisi tertentu dalam daftar. Item pertama adalah item yang terakhir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Menghapus item dengan posisi tertentu dalam daftar. Item pertama adalah item yang terakhir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Menghapus item terakhir dalam daftar.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Menghapus sebuah item secara acak dalam list.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "ke # dari akhir";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "ke #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "ke yang paling akhir";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "Dapatkan bagian pertama dari list";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "Dapatkan bagian list nomor # dari akhir";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "Dapatkan bagian daftar dari #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Membuat salinan dari bagian tertentu dari list.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "cari kejadian pertama item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "Cari kejadian terakhir item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Mengembalikan indeks dari kejadian pertama/terakhir item dalam daftar.  Menghasilkan 0 jika teks tidak ditemukan.";
Blockly.Msg.LISTS_INLIST = "dalam daftar";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 kosong";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "panjang dari %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Mengembalikan panjang daftar.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "membuat daftar dengan item %1 diulang %2 kali";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Ciptakan daftar yang terdiri dari nilai yang diberikan diulang jumlah waktu yang ditentukan.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "sebagai";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "sisipkan di";
Blockly.Msg.LISTS_SET_INDEX_SET = "tetapkan";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Sisipkan item di bagian awal dari list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Sisipkan item ke dalam posisi yang telah ditentukan di dalam list. #1 adalah item yang terakhir.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Sisipkan item ke dalam posisi yang telah ditentukan di dalam list. #1 adalah item yang pertama.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Tambahkan item ke bagian akhir list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Sisipkan item secara acak ke dalam list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Tetapkan item pertama di dalam list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Tetapkan item ke dalam posisi yang telah ditentukan di dalam list. #1 adalah item yang terakhir.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Tetapkan item ke dalam posisi yang telah ditentukan di dalam list. #1 adalah item yang pertama.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Menetapkan item terakhir dalam list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Tetapkan secara acak sebuah item dalam list.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";  // untranslated
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";  // untranslated
Blockly.Msg.LISTS_TOOLTIP = "Mengembalikan nilai benar (true) jika list kosong.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "Salah";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Mengembalikan betul (true) atau salah (false).";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "Benar";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Mengembalikan betul jika input kedua-duanya sama dengan satu sama lain.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Mengembalikan nilai benar (true) jika input yang pertama lebih besar dari input yang kedua.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Mengembalikan nilai benar (true) jika input yang pertama lebih besar dari atau sama dengan input yang kedua.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Mengembalikan nilai benar (true) jika input yang pertama lebih kecil dari input yang kedua.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Mengembalikan nilai benar (true) jika input yang pertama lebih kecil atau sama dengan input yang kedua .";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Mengembalikan nilai benar (true) jika kedua input tidak sama satu dengan yang lain.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "bukan (not) %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Mengembalikan nilai benar (true) jika input false.  Mengembalikan nilai salah (false) jika input true.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "mengembalikan kosong.";
Blockly.Msg.LOGIC_OPERATION_AND = "dan";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "atau";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Kembalikan betul jika kedua-dua input adalah betul.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Mengembalikan nilai benar (true) jika setidaknya salah satu masukan nilainya benar (true).";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "jika tidak benar (false)";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "jika benar (true)";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Periksa kondisi di \"test\". Jika kondisi benar (true), mengembalikan nilai \"jika benar\" ; Jik sebaliknya akan mengembalikan nilai \"jika salah\".";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://id.wikipedia.org/wiki/Aritmetika";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Kembalikan jumlah dari kedua angka.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Kembalikan hasil bagi dari kedua angka.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Kembalikan selisih dari kedua angka.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Kembalikan perkalian dari kedua angka.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Kembalikan angka pertama pangkat angka kedua.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "oleh";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "ubah";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Tambahkan angka kedalam variabel '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Kembalikan salah satu konstant: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), atau ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "Batasi %1 rendah %2 tinggi %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Batasi angka antara batas yang ditentukan (inklusif).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "dibagi oleh";
Blockly.Msg.MATH_IS_EVEN = "adalah bilangan genap";
Blockly.Msg.MATH_IS_NEGATIVE = "adalah  bilangan negatif";
Blockly.Msg.MATH_IS_ODD = "adalah bilangan ganjil";
Blockly.Msg.MATH_IS_POSITIVE = "adalah  bilangan positif";
Blockly.Msg.MATH_IS_PRIME = "adalah bilangan pokok";
Blockly.Msg.MATH_IS_TOOLTIP = "Periksa apakah angka adalah bilangan genap, bilangan pokok, bilangan bulat, bilangan positif, bilangan negatif, atau apakan bisa dibagi oleh angka tertentu. Mengembalikan benar (true) atau salah (false).";
Blockly.Msg.MATH_IS_WHOLE = "adalah bilangan bulat";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "sisa %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Kembalikan sisa dari pembagian ke dua angka.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Suatu angka.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "rata-rata dari list (daftar)";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximum dari list (daftar)";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median dari list (daftar)";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum dari list (daftar)";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "mode-mode dari list (daftar)";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "item acak dari list (daftar)";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "deviasi standar dari list (daftar)";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "jumlah dari list (daftar)";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Kembalikan rata-rata (mean aritmetik) dari nilai numerik dari list (daftar).";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Kembalikan angka terbesar dari list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Kembalikan median dari list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Kembalikan angka terkecil dari list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Kembalikan list berisi item-item yang paling umum dari dalam list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Kembalikan element acak dari list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Kembalikan standard deviasi dari list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Kembalikan jumlah dari seluruh bilangan dari list.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "Nilai pecahan acak";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Mengembalikan nilai acak pecahan antara 0.0 (inklusif) dan 1.0 (ekslusif).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "acak bulat dari %1 sampai %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Mengembalikan bilangan acak antara dua batas yang ditentukan, inklusif.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "membulatkan";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "membulatkan kebawah";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "mengumpulkan";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Bulatkan suatu bilangan naik atau turun.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "mutlak";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "akar";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Kembalikan nilai absolut angka.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Kembalikan 10 pangkat angka.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Kembalikan logaritma natural dari angka.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Kembalikan dasar logaritma 10 dari angka.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Kembalikan penyangkalan terhadap angka.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Kembalikan 10 pangkat angka.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Kembalikan akar dari angka.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Kembalikan acosine dari angka.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Kembalikan asin dari angka.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Kembalikan atan dari angka.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Kembalikan cos dari derajat (bukan radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Kembalikan sinus dari derajat (bukan radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Kembalikan tangen dari derajat (tidak radian).";
Blockly.Msg.ME = "Me";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Pembolehubah baru...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nama pembolehubah baru:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";  // untranslated
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "dengan:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Menjalankan fungsi '%1' yang ditetapkan pengguna.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Menjalankan fungsi  '%1' yang ditetapkan pengguna dan menggunakan outputnya.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "dengan:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Buat '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "buat sesuatu";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "untuk";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Menciptakan sebuah fungsi dengan tiada output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "kembali";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Menciptakan sebuah fungsi dengan satu output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Peringatan: Fungsi ini memiliki parameter duplikat.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Sorot definisi fungsi";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Jika nilai yang benar, kemudian kembalikan nilai kedua.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Peringatan: Blok ini dapat digunakan hanya dalam definisi fungsi.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "masukan Nama:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an input to the function.";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "input";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, remove, or reorder inputs to this function.";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Hapus komentar";
Blockly.Msg.RENAME_VARIABLE = "namai ulang variabel...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Ubah nama semua variabel '%1' menjadi:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "tambahkan teks";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "untuk";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Tambahkan beberapa teks ke variabel '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "menjadi huruf kecil";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "menjadi huruf pertama kapital";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "menjadi huruf kapital";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Kembalikan kopi dari text dengan kapitalisasi yang berbeda.";
Blockly.Msg.TEXT_CHARAT_FIRST = "ambil  huruf pertama";
Blockly.Msg.TEXT_CHARAT_FROM_END = "ambil  huruf nomor # dari belakang";
Blockly.Msg.TEXT_CHARAT_FROM_START = "ambil huruf ke #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "dalam teks";
Blockly.Msg.TEXT_CHARAT_LAST = "ambil  huruf terakhir";
Blockly.Msg.TEXT_CHARAT_RANDOM = "ambil huruf secara acak";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Kembalikan karakter dari posisi tertentu.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Tambahkan suatu item ke dalam teks.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Tambah, ambil, atau susun ulang teks blok.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "pada huruf nomer # dari terakhir";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "pada huruf #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "pada huruf terakhir";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in teks";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "ambil bagian teks (substring) dari huruf pertama";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "ambil bagian teks (substring) dari huruf ke # dari terakhir";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "ambil bagian teks (substring) dari huruf no #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Mengembalikan spesifik bagian dari teks.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "dalam teks";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "temukan kejadian pertama dalam teks";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "temukan kejadian terakhir dalam teks";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Kembalikan indeks pertama dan terakhir dari kejadian pertama/terakhir dari teks pertama dalam teks kedua.  Kembalikan 0 jika teks tidak ditemukan.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 kosong";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Kembalikan benar (true) jika teks yang disediakan kosong.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "Buat teks dengan";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Buat teks dengan cara gabungkan sejumlah item.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "panjang dari %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Kembalikan sejumlah huruf (termasuk spasi) dari teks yang disediakan.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "cetak %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Cetak teks yant ditentukan, angka atau ninlai lainnya.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Meminta pengguna untuk memberi sebuah angka.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Meminta pengguna untuk memberi beberapa teks.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "Meminta angka dengan pesan";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "meminta teks dengan pesan";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Huruf, kata atau baris teks.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "pangkas ruang dari kedua belah sisi";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "pangkas ruang dari sisi kiri";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "pangkas ruang dari sisi kanan";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Kembali salinan teks dengan spasi dihapus dari satu atau kedua ujungnya.";
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Membuat 'tetapkan %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TITLE = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Mengembalikan nilai variabel ini.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Membuat 'dapatkan %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TAIL = "untuk";
Blockly.Msg.VARIABLES_SET_TITLE = "tetapkan";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "tetapkan variabel ini dengan input yang sama.";
Blockly.Msg.VARIABLES_TYPE_ANY = "any";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY = "list";  // untranslated
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "true/false";  // untranslated
Blockly.Msg.VARIABLES_TYPE_CLASS = "class";  // untranslated
Blockly.Msg.VARIABLES_TYPE_COLOUR = "colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_INSTANCE = "instance";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_SOUND = "sound";  // untranslated
Blockly.Msg.VARIABLES_TYPE_STRING = "text";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.KF_MATH_XY_TO_XY_MESSAGE_AFTER = Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_AFTER;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.KF_MATH_XY_TO_XY_MESSAGE_BEFORE = Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_BEFORE;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;