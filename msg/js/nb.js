// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.nb');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Legg til kommentar";
Blockly.Msg.AUTH = "Vennligst godkjenn at denne appen gjør det mulig for deg å lagre arbeidet slik at du kan dele det.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Bytt verdi:";
Blockly.Msg.CHAT = "Chat med din medarbeider ved å skrive i dette feltet!";
Blockly.Msg.COLLAPSE_ALL = "Skjul blokker";
Blockly.Msg.COLLAPSE_BLOCK = "Skjul blokk";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "farge 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "farge 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "forhold";
Blockly.Msg.COLOUR_BLEND_TITLE = "blande";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blander to farger sammen med et gitt forhold (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Velg en farge fra paletten.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "tilfeldig farge";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Velg en tilfeldig farge.";
Blockly.Msg.COLOUR_RGB_BLUE = "blå";
Blockly.Msg.COLOUR_RGB_GREEN = "grønn";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rød";
Blockly.Msg.COLOUR_RGB_TITLE = "farge med";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Lag en farge med angitt verdi av rød, grønn og blå. Alle verdier må være mellom 0 og 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "bryt ut av løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "fortsett med neste gjentakelse av løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Bryt ut av den gjeldende løkken.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Hopp over resten av denne løkken og fortsett med neste gjentakelse.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Advarsel: Denne blokken kan kun brukes innenfor en løkke.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each for each block";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "i listen";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "for hvert element";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For hvert element i en liste, angi variabelen '%1' til elementet, og deretter lag noen setninger.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "fra %1 til %2 med %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "tell med";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Ha variabel %1 ta verdiene fra start nummer til slutt nummer, telle med spesifisert intervall og lag de spesifiserte blokkene.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Legg til en betingelse til hvis blokken.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Legg til hva som skal skje hvis de andre ikke slår til.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Legg til, fjern eller flytt seksjoner i denne hvis-blokken.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "ellers";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "ellers hvis";
Blockly.Msg.CONTROLS_IF_MSG_IF = "hvis";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Hvis dette er sant, så gjør følgende.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Hvis dette er sant, så utfør den første blokken av instruksjoner. Hvis ikke, utfør den andre blokken.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Hvis det første stemmer, så utfør den første blokken av instruksjoner. Ellers, hvis det andre stemmer, utfør den andre blokken av instruksjoner.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Hvis den første verdien er sann, så utfør den første blokken med setninger. Ellers, hvis den andre verdien er sann, så utfør den andre blokken med setninger. Hvis ingen av verdiene er sanne, så utfør den siste blokken med setninger.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "gjør";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "gjenta %1 ganger";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "gjenta";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "ganger";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Gjenta noen instruksjoner flere ganger.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "gjenta til";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "gjenta mens";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Så lenge et utsagn ikke stemmer, gjør noen instruksjoner.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Så lenge et utsagn stemmer, utfør noen instruksjoner.";
Blockly.Msg.DELETE_BLOCK = "Slett blokk";
Blockly.Msg.DELETE_X_BLOCKS = "Slett %1 blokk(er)";
Blockly.Msg.DISABLE_BLOCK = "Deaktiver blokk";
Blockly.Msg.DUPLICATE_BLOCK = "duplikat";
Blockly.Msg.ENABLE_BLOCK = "Aktiver blokk";
Blockly.Msg.EXPAND_ALL = "Utvid blokker";
Blockly.Msg.EXPAND_BLOCK = "Utvid blokk";
Blockly.Msg.EXTERNAL_INPUTS = "Eksterne kilder";
Blockly.Msg.HELP = "Hjelp";
Blockly.Msg.INLINE_INPUTS = "Interne kilder";
Blockly.Msg.KF_ANIMATION_BOOLEAN_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_BOOLEAN_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_CURRENT_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_CURRENT_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_CURRENT_TOOLTIP = "Returns the current animation that is playing on this game object.";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_MESSAGE_AFTER = "animation frame";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_MESSAGE_BEFORE = "goto";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_TOOLTIP = "Goes to the selected frame in the current animation. If at the end of an animation it will go to the first frame, or the start if at the end.";  // untranslated
Blockly.Msg.KF_ANIMATION_NUMBERS_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_NUMBERS_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_NUMBERS_TOOLTIP = "Returns a number related to the selected field..";  // untranslated
Blockly.Msg.KF_ANIMATION_PLAY_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_PLAY_MESSAGE = "play animation";  // untranslated
Blockly.Msg.KF_ANIMATION_PLAY_TOOLTIP = "Starts playing an animation on this gameobject.";  // untranslated
Blockly.Msg.KF_ANIMATION_STATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_STATE_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_STATE_TOOLTIP = " The state of the current animation.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_BOOLEAN_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_BOOLEAN_TOOLTIP = "Returns the state of a property selected.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_MESSAGE_AFTER = "side";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_MESSAGE_BEFORE = "on";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_TOOLTIP = "Returns a Boolean indiciating the state of the selected statement for this gameobject.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_GRAVITY_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_GRAVITY_MESSAGE = "gravity";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_GRAVITY_TOOLTIP = "Returns the selected gravity value.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_NUMERIC_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_NUMERIC_TOOLTIP = "Returns a value for the selected property.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_ROTATION_FROM_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_ROTATION_FROM_MESSAGE = "get rotation based on";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_ROTATION_FROM_TOOLTIP = "Returns a rotation for the property based on a selected property.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_MESSAGE_ONE = "collidable object of";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_MESSAGE_THREE = "and is on the layer";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_MESSAGE_TWO = "side exists at";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_TOOLTIP = "Returns a boolean indiciating if a colliable object (with the collision shape AND layer as passed) exists at the coordinates passed.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_MESSAGE = "collidable object exists at";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_TOOLTIP = "Returns a boolean indiciating if a colliable object exists at the cooridnates passed. ";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_BOOLEAN_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_BOOLEAN_MESSAGE = "set";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_BOOLEAN_TOOLTIP = "Sets a boolean property selected.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_MESSAGE_AFTER = "side collisions to";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_MESSAGE_BEFORE = "set";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_TOOLTIP = "Sets the sides of this gameobject that can collide with other gameobjects.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_GRAVITY_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_GRAVITY_MESSAGE = "set gravity";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_GRAVITY_TOOLTIP = "Sets the global gravity property to a value passed.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_NUMERIC_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_NUMERIC_MESSAGE = "set";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_NUMERIC_TOOLTIP = "Sets a numeric property selected.";  // untranslated
Blockly.Msg.KF_BLOCK_DEPRECATED = "Warning: This block is being discontinued";  // untranslated
Blockly.Msg.KF_CAMERA_CENTER_ON_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_CENTER_ON_INSTANCE_MESSAGE = "center camera on";  // untranslated
Blockly.Msg.KF_CAMERA_CENTER_ON_INSTANCE_TOOLTIP = "Centers the cameras to the instances current position.";  // untranslated
Blockly.Msg.KF_CAMERA_GET_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_GET_MESSAGE = "camera";  // untranslated
Blockly.Msg.KF_CAMERA_GET_READ_ONLY_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_GET_READ_ONLY_MESSAGE = "camera";  // untranslated
Blockly.Msg.KF_CAMERA_GET_READ_ONLY_TOOLTIP = "Returns a selected read only property on the camera.";  // untranslated
Blockly.Msg.KF_CAMERA_GET_SPEED_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_GET_SPEED_MESSAGE = "camera pan speed";  // untranslated
Blockly.Msg.KF_CAMERA_GET_SPEED_TOOLTIP = "Returns the cameras pan speed.";  // untranslated
Blockly.Msg.KF_CAMERA_GET_TOOLTIP = "Returns a selected property on the camera.";  // untranslated
Blockly.Msg.KF_CAMERA_LOCK_ON_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_LOCK_ON_MESSAGE = "lock camera on";  // untranslated
Blockly.Msg.KF_CAMERA_LOCK_ON_TOOLTIP = "Locks the camera to an Instance passed.";  // untranslated
Blockly.Msg.KF_CAMERA_PAN_TO_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_PAN_TO_MESSAGE = "camera to";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_GET_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_GET_MESSAGE = "camera scale";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_GET_TOOLTIP = "Returns the values for the cameras scale on the selected axis.";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_MESSAGE = "camera scale";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_TOOLTIP = "Sets the camera scale on the selected axis to a value passed.";  // untranslated
Blockly.Msg.KF_CAMERA_SET_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SET_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_CAMERA_SET_MESSAGE_BEFORE = "set camera";  // untranslated
Blockly.Msg.KF_CAMERA_SET_SPEED_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SET_SPEED_MESSAGE = "set camera pan speed";  // untranslated
Blockly.Msg.KF_CAMERA_SET_SPEED_TOOLTIP = "Sets the cameras pan speed to a value passed.";  // untranslated
Blockly.Msg.KF_CAMERA_SET_TOOLTIP = "Sets a selected property on the camera to the value passed.";  // untranslated
Blockly.Msg.KF_CAMERA_STATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_STATE_MESSAGE = "is camera";  // untranslated
Blockly.Msg.KF_CAMERA_STATE_TOOLTIP = "Returns true if the statement is correct.";  // untranslated
Blockly.Msg.KF_CAMERA_UNLOCK_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_UNLOCK_MESSAGE = "unlock camera";  // untranslated
Blockly.Msg.KF_CAMERA_UNLOCK_TOOLTIP = "Unlocks the camera.";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_MESSAGE_AFTER = "at";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_MESSAGE_BEFORE = "create new instance of";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_TOOLTIP = "Creates a new instance of a class type at the location specified.";  // untranslated
Blockly.Msg.KF_CLASSES_GET_ALL_INSTANCES_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_GET_ALL_INSTANCES_MESSAGE = "get all instances of";  // untranslated
Blockly.Msg.KF_CLASSES_GET_ALL_INSTANCES_TOOLTIP = "Returns a list of all the instances with that class.";  // untranslated
Blockly.Msg.KF_CLASSES_GET_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_GET_INSTANCE_MESSAGE = "instance of";  // untranslated
Blockly.Msg.KF_CLASSES_GET_INSTANCE_TOOLTIP = "Selects the corresponding instance.";  // untranslated
Blockly.Msg.KF_CLASSES_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_INSTANCE_MESSAGE = "class of";  // untranslated
Blockly.Msg.KF_CLASSES_INSTANCE_TOOLTIP = "Returns the class of the selected instance.";  // untranslated
Blockly.Msg.KF_CLASSES_SELECTOR_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_SELECTOR_TOOLTIP = "Returns the class selected.";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_MESSAGE_AFTER = "has";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_MESSAGE_BEFORE = "When the animation";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_TOOLTIP = "Fires events when a selected event occurs on the animation passed.";  // untranslated
Blockly.Msg.KF_EVENT_CONSTANTLY_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_CONSTANTLY_MESSAGE = "Constantly";  // untranslated
Blockly.Msg.KF_EVENT_CONSTANTLY_TOOLTIP = "The event triggered every frame";  // untranslated
Blockly.Msg.KF_EVENT_CREATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_CREATE_MESSAGE = "When created";  // untranslated
Blockly.Msg.KF_EVENT_CREATE_TOOLTIP = "The event triggered when this game object is created";  // untranslated
Blockly.Msg.KF_EVENT_INST_INPUT_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_INST_INPUT_MESSAGE = "When the player ";  // untranslated
Blockly.Msg.KF_EVENT_INST_INPUT_TOOLTIP = "The event is triggered when the player releases/presses (click/touch) a given instance";  // untranslated
Blockly.Msg.KF_EVENT_INST_PRESS_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_INST_PRESS_MESSAGE = "When the player presses on ";  // untranslated
Blockly.Msg.KF_EVENT_INST_PRESS_TOOLTIP = "The event triggered when the player presses a click/touch on the given instance.";  // untranslated
Blockly.Msg.KF_EVENT_INST_RELEASE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_INST_RELEASE_MESSAGE = "When the player releases over ";  // untranslated
Blockly.Msg.KF_EVENT_INST_RELEASE_TOOLTIP = "The event triggered when the player releases a click/touch on the given instance.";  // untranslated
Blockly.Msg.KF_EVENT_KEY_INPUT_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_KEY_INPUT_MESSAGE = "When the player";  // untranslated
Blockly.Msg.KF_EVENT_KEY_INPUT_TOOLTIP = "The event is triggered when the player presses/releases the given key on their keyboard.";  // untranslated
Blockly.Msg.KF_EVENT_KEY_PRESS_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_KEY_PRESS_MESSAGE = "When the player presses";  // untranslated
Blockly.Msg.KF_EVENT_KEY_PRESS_TOOLTIP = "The event triggered when the player presses the given key on their keyboard.";  // untranslated
Blockly.Msg.KF_EVENT_KEY_RELEASE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_KEY_RELEASE_MESSAGE = "When the player releases";  // untranslated
Blockly.Msg.KF_EVENT_KEY_RELEASE_TOOLTIP = "The event triggered when the player releases the given key on their keyboard.";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_MESSAGE_AFTER = "is retrieved";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_MESSAGE_BEFORE = "When a message of";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_TOOLTIP = "Send events when the player";  // untranslated
Blockly.Msg.KF_EVENT_REMOVE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_REMOVE_MESSAGE = "When removed";  // untranslated
Blockly.Msg.KF_EVENT_REMOVE_TOOLTIP = "The event is triggered when this gameobject is destroyed.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_INPUT_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_INPUT_MESSAGE = "When the stage is";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_INPUT_TOOLTIP = "The event is trggered when the player either pressed or releases anywhere in the game scene.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_PRESS_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_PRESS_MESSAGE = "When stage is pressed";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_PRESS_TOOLTIP = "The event triggered when the player presses a click/touch down anywhere in the game scene.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_RELEASE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_RELEASE_MESSAGE = "When stage is released";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_RELEASE_TOOLTIP = "The event triggered when the player releases a click/touch anywhere in the game scene.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_TOUCHED_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_TOUCHED_MESSAGE = "When the stage is";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_TOUCHED_TOOLTIP = "Executes when the stage is touched.";  // untranslated
Blockly.Msg.KF_EVENT_TIME_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_TIME_MESSAGE_AFTER = "milliseconds";  // untranslated
Blockly.Msg.KF_EVENT_TIME_SINGLE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_TIME_SINGLE_MESSAGE_AFTER = "milliseconds have passed";  // untranslated
Blockly.Msg.KF_EVENT_TIME_SINGLE_TOOLTIP = "Triggers the inner blocks after the set period of time has occured. Warning: Does not check to see if the object was destroyed before the event fires.";  // untranslated
Blockly.Msg.KF_EVENT_TIME_TOOLTIP = "Triggers the event when the number of milliseconds set has passed. The number of milliseconds passed is not dynamic, meaning that it will not update once set.";  // untranslated
Blockly.Msg.KF_EVENT_TOUCH_ON_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_TOUCH_ON_MESSAGE = "When I am touched by";  // untranslated
Blockly.Msg.KF_EVENT_TOUCH_ON_TOOLTIP = "Triggers the inner blocks when this instance collides with the instance passed.";  // untranslated
Blockly.Msg.KF_GAME_GET_TIME_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_GET_TIME_MESSAGE = "time";  // untranslated
Blockly.Msg.KF_GAME_GET_TIME_TOOLTIP = "Returns the associate time method associated.";  // untranslated
Blockly.Msg.KF_GAME_GOTO_LEVEL_NUM_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_GOTO_LEVEL_NUM_MESSAGE = "go to";  // untranslated
Blockly.Msg.KF_GAME_GOTO_LEVEL_NUM_TOOLTIP = "Changes the current level to the level specified.";  // untranslated
Blockly.Msg.KF_GAME_LEVEL_SPECIAL_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_LEVEL_SPECIAL_TOOLTIP = "A list of special levels, they include previous/current/next and the first/last levels.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_COLOUR_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_COLOUR_MESSAGE = "stage colour";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_COLOUR_TOOLTIP = "Gets the colour of the game background.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_SIZE_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_SIZE_TOOLTIP = "Gets the size of the games viewport on the screen.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_COLOUR_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_COLOUR_MESSAGE = "set stage colour to";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_COLOUR_TOOLTIP = "Sets the colour of the game background.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_SIZE_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_SIZE_TOOLTIP = "Sets the size of the games viewport on the screen.";  // untranslated
Blockly.Msg.KF_GAME_TIME_METHOD_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_TIME_METHOD_MESSAGE = "time";  // untranslated
Blockly.Msg.KF_GAME_TIME_METHOD_TOOLTIP = "Pauses or resumes the clock, thus pausing/resume gameplay.";  // untranslated
Blockly.Msg.KF_INPUT_FINGERS_HELPURL = "";  // untranslated
Blockly.Msg.KF_INPUT_FINGERS_MESSAGE = "all fingers";  // untranslated
Blockly.Msg.KF_INPUT_FINGERS_TOOLTIP = "Returns a list of all the finger objects.";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_GET_BOOL_HELPURL = "";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_GET_BOOL_MESSAGE = "is";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_GET_BOOL_TOOLTIP = "Returns a boolean associated with the selected statement.";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_GET_COORDS_HELPURL = "";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_GET_COORDS_MESSAGE = "of";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_GET_COORDS_TOOLTIP = "";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_GET_TIMES_HELPURL = "";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_GET_TIMES_MESSAGE = "of";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_GET_TIMES_TOOLTIP = "A number associated with the time selected.";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_LATEST_HELPURL = "";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_LATEST_MESSAGE = "latest finger";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_LATEST_TOOLTIP = "The finger which was used in the last event.";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_SELECT_HELPURL = "";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_SELECT_MESSAGE = "finger";  // untranslated
Blockly.Msg.KF_INPUT_FINGER_SELECT_TOOLTIP = "Returns the finger associated with the number passed.";  // untranslated
Blockly.Msg.KF_INPUT_MOUSE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INPUT_MOUSE_MESSAGE = "of mouse";  // untranslated
Blockly.Msg.KF_INPUT_MOUSE_TOOLTIP = "The position of the mouse in the current level";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_MESSAGE_AFTER = "from";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_MESSAGE_BEFORE = "tag";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_TOOLTIP = "Adds a tag passed to the given gameobject.";  // untranslated
Blockly.Msg.KF_INSTANCE_DEATH_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_DEATH_MESSAGE = "destroy";  // untranslated
Blockly.Msg.KF_INSTANCE_DEATH_TOOLTIP = "Destroys the selected instance. Destruction cannot be reverted!";  // untranslated
Blockly.Msg.KF_INSTANCE_EXECUTE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_EXECUTE_MESSAGE = "Execute";  // untranslated
Blockly.Msg.KF_INSTANCE_EXECUTE_TOOLTIP = "Executes the text directly pasted as code.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_ALL_BY_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_ALL_BY_TAG_MESSAGE = "get all children by tag";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_ALL_BY_TAG_TOOLTIP = "Returns a list of all the instances that have the tag passed.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_BY_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_BY_TAG_MESSAGE = "instance by tag";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_BY_TAG_TOOLTIP = "Returns a single instance by the tag passed.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_TOOLTIP = "Gets the value of a selected property of the given instance.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_VISIBLE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_VISIBLE_MESSAGE = "get visibility of";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_VISIBLE_TOOLTIP = "Returns visibility state of this gameobject. An alpha of zero is does not mean that the visiblity is false.";  // untranslated
Blockly.Msg.KF_INSTANCE_HAS_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_HAS_TAG_MESSAGE = "has tag";  // untranslated
Blockly.Msg.KF_INSTANCE_HAS_TAG_TOOLTIP = "Returns a boolean indicating if the gameobject has the tag or not.";  // untranslated
Blockly.Msg.KF_INSTANCE_MOVE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_MOVE_TOOLTIP = "Changes the depth (layer ordering) of an instance passed by the selected dropdown method.";  // untranslated
Blockly.Msg.KF_INSTANCE_SELECT_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SELECT_MESSAGE = "instance ";  // untranslated
Blockly.Msg.KF_INSTANCE_SELECT_TOOLTIP = "Selects a game object with the corresponding id.";  // untranslated
Blockly.Msg.KF_INSTANCE_SELF_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SELF_MESSAGE = "myself";  // untranslated
Blockly.Msg.KF_INSTANCE_SELF_TOOLTIP = "The game object that this script is attached to.";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_TOOLTIP = "Sets the selected property of a given instance to a new value.";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_MESSAGE_BEFORE = "set visibility of";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_TOOLTIP = "Sets whether the gameobject should be renderer or not. An alpha of zero is does not mean that the visiblity is false.";  // untranslated
Blockly.Msg.KF_INTERSECTS_CONTAINS_HELPURL = "";  // untranslated
Blockly.Msg.KF_INTERSECTS_CONTAINS_MESSAGE = "contains";  // untranslated
Blockly.Msg.KF_INTERSECTS_OVERLAPS_HELPURL = "";  // untranslated
Blockly.Msg.KF_INTERSECTS_OVERLAPS_MESSAGE = "overlaps";  // untranslated
Blockly.Msg.KF_INTERSECTS_OVERLAPS_TOOLTIP = "Checks to see if the two passed instances overlap.";  // untranslated
Blockly.Msg.KF_KEY_SPECIAL_HELPURL = "";  // untranslated
Blockly.Msg.KF_KEY_SPECIAL_MESSAGE = "key:";  // untranslated
Blockly.Msg.KF_KEY_SPECIAL_TOOLTIP = "A special keyboard key";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_BEFORE = "from";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_TOOLTIP = "Returns the selected value between two instances.";  // untranslated
Blockly.Msg.KF_MATH_UTILS_HELPURL = "";  // untranslated
Blockly.Msg.KF_MATH_UTILS_TOOLTIP = "";  // untranslated
Blockly.Msg.KF_MATH_XY_TO_XY_HELPURL = "";  // untranslated
Blockly.Msg.KF_MATH_XY_TO_XY_TOOLTIP = "Returns the selected value between an instance and a set of coordinates passed.";  // untranslated
Blockly.Msg.KF_MESSAGING_CLASS_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_CLASS_MESSAGE_AFTER = "to all";  // untranslated
Blockly.Msg.KF_MESSAGING_CLASS_TOOLTIP = "Sends a message to all instances of a class you pass.";  // untranslated
Blockly.Msg.KF_MESSAGING_EVERYONE_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_EVERYONE_MESSAGE = "send every gameobject a message of";  // untranslated
Blockly.Msg.KF_MESSAGING_EVERYONE_TOOLTIP = "Sends a message to every gameobject.";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_MESSAGE_BEFORE = "send message";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_TOOLTIP = "Sends a message to a singular instance you passed.";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_MESSAGE_AFTER = "to each instance in";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_MESSAGE_BEFORE = "send message";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_TOOLTIP = "Sends a message to every instance in a list.";  // untranslated
Blockly.Msg.KF_SOUND_BACKGROUND_STATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_BACKGROUND_STATE_MESSAGE = "music";  // untranslated
Blockly.Msg.KF_SOUND_BACKGROUND_STATE_TOOLTIP = "Pauses or resumes the current background track.";  // untranslated
Blockly.Msg.KF_SOUND_GET_MUTE_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_GET_MUTE_MESSAGE = "mute";  // untranslated
Blockly.Msg.KF_SOUND_GET_MUTE_TOOLTIP = "Sets the mute state of the selected piece of audio by a boolean passed.";  // untranslated
Blockly.Msg.KF_SOUND_GET_VOLUME_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_GET_VOLUME_MESSAGE = "get volume";  // untranslated
Blockly.Msg.KF_SOUND_GET_VOLUME_TOOLTIP = "Gets the volume of all sounds played. A number from 0 - 100.";  // untranslated
Blockly.Msg.KF_SOUND_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_BACKGROUND_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_BACKGROUND_MESSAGE = "play music";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_BACKGROUND_TOOLTIP = "Starts playing the specified music from the beginning.";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_EFFECT_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_EFFECT_MESSAGE = "play sound effect";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_EFFECT_TOOLTIP = "Plays the given sound effect once.";  // untranslated
Blockly.Msg.KF_SOUND_SET_MUTE_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_SET_MUTE_MESSAGE = "mute";  // untranslated
Blockly.Msg.KF_SOUND_SET_MUTE_TOOLTIP = "Sets the mute state of the selected piece of audio by a boolean passed.";  // untranslated
Blockly.Msg.KF_SOUND_SET_VOLUME_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_SET_VOLUME_MESSAGE = "set volume";  // untranslated
Blockly.Msg.KF_SOUND_SET_VOLUME_TOOLTIP = "Sets the volume of all sounds played. A number from 0 - 100.";  // untranslated
Blockly.Msg.KF_SOUND_STOP_BACKGROUND_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_STOP_BACKGROUND_MESSAGE = "stop the current music";  // untranslated
Blockly.Msg.KF_SOUND_STOP_BACKGROUND_TOOLTIP = "Stops playing the current music and clears the playhead. If resumed it will start from the beginning.";  // untranslated
Blockly.Msg.KF_SOUND_TOOLTIP = "A list of all the sounds included in the game.";  // untranslated
Blockly.Msg.KF_TYPE_BOOLEAN = "True/False";  // untranslated
Blockly.Msg.KF_TYPE_INSTANCE = "Instance";  // untranslated
Blockly.Msg.KF_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.KF_TYPE_STRING = "Text";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://en.wikipedia.org/wiki/Linked_list#Empty_lists";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "opprett en tom liste";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returnerer en tom liste, altså med lengde 0";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Legg til, fjern eller endre rekkefølgen for å endre på denne delen av listen.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "lag en liste med";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Tilføy et element til listen.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Lag en liste med et vilkårlig antall elementer.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "først";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# fra slutten";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "hent";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "hent og fjern";
Blockly.Msg.LISTS_GET_INDEX_LAST = "siste";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "tilfeldig";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "fjern";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returnerer det første elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returner elementet på den angitte posisjonen i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returner elementet på den angitte posisjonen i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returnerer det siste elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returnerer et tilfeldig element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Fjerner og returnerer det første elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Fjerner og returnerer elementet ved en gitt posisjon i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Fjerner og returnerer elementet ved en gitt posisjon i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Fjerner og returnerer det siste elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Fjerner og returnerer et tilfeldig element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Fjerner det første elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Fjerner et element ved en gitt posisjon i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Fjerner et element ved en gitt posisjon i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Fjerner det siste elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Fjerner et tilfeldig element i en liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "til # fra slutten";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "til #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "til siste";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "Hent en del av listen";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "Hent de siste # elementene";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "Hent del-listen fra #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Kopiérer en ønsket del av en liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "finn første forekomst av elementet";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "finn siste forekomst av elementet";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returnerer posisjonen til den første/siste forekomsten av elementet i en liste. Returnerer 0 hvis ikke funnet.";
Blockly.Msg.LISTS_INLIST = "i listen";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 er tom";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "lengden på %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returnerer lengden til en liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "Lag en liste hvor elementet %1 forekommer %2 ganger";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Lager en liste hvor den gitte verdien gjentas et antall ganger.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "som";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "sett inn ved";
Blockly.Msg.LISTS_SET_INDEX_SET = "sett";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Setter inn elementet i starten av en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Setter inn elementet ved den angitte posisjonen i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Setter inn elementet ved den angitte posisjonen i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Tilføy elementet til slutten av en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Setter inn elementet ved en tilfeldig posisjon i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Angir det første elementet i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Setter inn elementet ved den angitte posisjonen i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Setter inn elementet ved den angitte posisjonen i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Angir det siste elementet i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Angir et tilfeldig element i en liste.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";  // untranslated
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";  // untranslated
Blockly.Msg.LISTS_TOOLTIP = "Returnerer sann hvis listen er tom.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "usann";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returnerer enten sann eller usann.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "sann";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Returnerer sann hvis begge inputene er like hverandre.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Returnerer sant hvis det første argumentet er større enn den andre argumentet.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Returnerer sant hvis det første argumentet er større enn eller likt det andre argumentet.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Returnerer sant hvis det første argumentet er mindre enn det andre argumentet.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Returnerer sant hvis det første argumentet er mindre enn eller likt det andre argumentet.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Returnerer sant hvis begge argumentene er ulike hverandre.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "ikke %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returnerer sant hvis argumentet er usant. Returnerer usant hvis argumentet er sant.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returnerer null.";
Blockly.Msg.LOGIC_OPERATION_AND = "og";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "eller";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Returnerer sant hvis begge argumentene er sanne.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Returnerer sant hvis minst ett av argumentene er sant.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "hvis usant";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "hvis sant";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Sjekk betingelsen i 'test'. Hvis betingelsen er sann, da returneres 'hvis sant' verdien. Hvis ikke returneres 'hvis usant' verdien.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://no.wikipedia.org/wiki/Aritmetikk";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Returnerer summen av to tall.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Returner kvotienten av to tall.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Returner differansen mellom to tall.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Returner produktet av to tall.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Returner det første tallet opphøyd i den andre tallet.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "ved";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "endre";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Addere et tall til variabelen '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Returner en av felleskonstantene π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), eller ∞ (uendelig).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "begrense %1 lav %2 høy %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Begrens et tall til å være mellom de angitte grenseverdiene (inklusiv).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "er delelig med";
Blockly.Msg.MATH_IS_EVEN = "er et partall";
Blockly.Msg.MATH_IS_NEGATIVE = "er negativer negativt";
Blockly.Msg.MATH_IS_ODD = "er et oddetall";
Blockly.Msg.MATH_IS_POSITIVE = "er positivt";
Blockly.Msg.MATH_IS_PRIME = "er et primtall";
Blockly.Msg.MATH_IS_TOOLTIP = "Sjekk om et tall er et partall, oddetall, primtall, heltall, positivt, negativt, eller om det er delelig med et annet tall. Returnerer sant eller usant.";
Blockly.Msg.MATH_IS_WHOLE = "er et heltall";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resten av %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Returner resten fra delingen av to tall.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "x";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Et tall.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "gjennomsnittet av listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maksimum av liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "medianen til listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum av listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "Listens typetall";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "tilfeldig element i listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standardavviket til listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "summen av listen";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Returner det aritmetiske gjennomsnittet av tallene i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Returner det største tallet i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Returner listens median.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Returner det minste tallet i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Returner en liste av de vanligste elementene i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Returner et tilfeldig element fra listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Returner listens standardavvik.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Returner summen av alle tallene i listen.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "tilfeldig flyttall";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Returner et tilfeldig flyttall mellom 0.0 (inkludert) og 1.0 (ikke inkludert).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "Et tilfeldig heltall mellom %1 og %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Returner et tilfeldig tall mellom de to spesifiserte grensene, inkludert de to.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "avrunding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "rund ned";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "rund opp";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Avrund et tall ned eller opp.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluttverdi";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "kvadratrot";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Returner absoluttverdien av et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Returner e opphøyd i et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Returner den naturlige logaritmen til et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Returner base-10 logaritmen til et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Returner det negative tallet.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Returner 10 opphøyd i et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Returner kvadratroten av et tall.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Returner arccosinus til et tall.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Returner arcsinus til et tall.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Returner arctangens til et tall.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Returner cosinus av en vinkel (ikke radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Returner sinus av en vinkel (ikke radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Returner tangenten av en vinkel (ikke radian).";
Blockly.Msg.ME = "Jeg";
Blockly.Msg.NEW_VARIABLE = "Ny variabel...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nytt variabelnavn:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "tillat uttalelser";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Kjør den brukerdefinerte funksjonen '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Kjør den brukerdefinerte funksjonen'%1' og bruk resultatet av den.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Opprett '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "gjør noe";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "til";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Opprett en funksjon som ikke har noe resultat.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "returner";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Oppretter en funksjon som har et resultat.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advarsel: Denne funksjonen har duplikate parametere.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Marker funksjonsdefinisjonen";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Hvis en verdi er sann, returner da en annen verdi.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advarsel: Denne blokken kan bare benyttes innenfor en funksjonsdefinisjon.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "Navn på parameter:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Legg til en input til funksjonen.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "parametere";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Legg til, fjern eller endre rekkefølgen på input til denne funksjonen.";
Blockly.Msg.REMOVE_COMMENT = "Fjern kommentar";
Blockly.Msg.RENAME_VARIABLE = "Gi nytt navn til variabel...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Endre navnet til alle '%1' variabler til:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "tilføy tekst";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "til";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Tilføy tekst til variabelen '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "til små bokstaver";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "til store forbokstaver";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "til STORE BOKSTAVER";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Returnerer en kopi av teksten der store og små bokstaver er byttet om.";
Blockly.Msg.TEXT_CHARAT_FIRST = "hent første bokstav";
Blockly.Msg.TEXT_CHARAT_FROM_END = "hent bokstav # fra slutten";
Blockly.Msg.TEXT_CHARAT_FROM_START = "hent bokstav #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "i tekst";
Blockly.Msg.TEXT_CHARAT_LAST = "hent den siste bokstaven";
Blockly.Msg.TEXT_CHARAT_RANDOM = "hent en tilfeldig bokstav";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returnerer bokstaven på angitt plassering.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Legg til et element til teksten.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "føy sammen";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Legg til, fjern eller forandre rekkefølgen for å forandre på denne tekstblokken.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "til bokstav # fra slutten";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "til bokstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "til siste bokstav";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "i tekst";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "hent delstreng fra første bokstav";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "hent delstreng fra bokstav # fra slutten";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "hent delstreng fra bokstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returnerer den angitte delen av teksten.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "i tekst";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "finn første forekomst av tekst";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "finn siste forekomst av tekst";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returnerer posisjonen for første/siste forekomsten av den første tekst i den andre teksten.  Returnerer 0 hvis teksten ikke blir funnet.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 er tom";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returnerer sann hvis den angitte teksten er tom.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "lage tekst med";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Opprett en tekst ved å sette sammen et antall elementer.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "lengden av %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returnerer antall bokstaver (inkludert mellomrom) i den angitte teksten.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "skriv ut %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Skriv ut angitt tekst, tall eller annet innhold.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Be brukeren om et tall.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Spør brukeren om tekst.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "spør om et tall med en melding";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "spør om tekst med en melding";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "En bokstav, ett ord eller en linje med tekst.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "fjern mellomrom fra begge sider av";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "fjern mellomrom fra venstre side av";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "fjern mellomrom fra høyre side av";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Returner en kopi av teksten med mellomrom fjernet fra en eller begge sidene.";
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "element";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Opprett 'sett %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "";
Blockly.Msg.VARIABLES_GET_TITLE = "";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returnerer verdien av denne variabelen.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Opprett 'hent %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TAIL = "til";
Blockly.Msg.VARIABLES_SET_TITLE = "sett";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Setter verdien av denne variablen lik parameteren.";
Blockly.Msg.VARIABLES_TYPE_ANY = "any";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY = "list";  // untranslated
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "true/false";  // untranslated
Blockly.Msg.VARIABLES_TYPE_CLASS = "class";  // untranslated
Blockly.Msg.VARIABLES_TYPE_COLOUR = "colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_INSTANCE = "instance";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_POINTER = "finger/pointer";  // untranslated
Blockly.Msg.VARIABLES_TYPE_SOUND = "sound";  // untranslated
Blockly.Msg.VARIABLES_TYPE_STRING = "text";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.KF_MATH_XY_TO_XY_MESSAGE_AFTER = Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_AFTER;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.KF_MATH_XY_TO_XY_MESSAGE_BEFORE = Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_BEFORE;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;