// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.ms');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Berikan Komen";
Blockly.Msg.AUTH = "Sila benarkan aplikasi ini untuk membolehkan hasil kerja anda disimpan, malah dikongsikan oleh anda.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Ubah nilai:";
Blockly.Msg.CHAT = "Bersembang dengan rakan kerjasama anda dengan menaip di dalam petak ini!";
Blockly.Msg.COLLAPSE_ALL = "Lipat Blok²";
Blockly.Msg.COLLAPSE_BLOCK = "Lipat Blok";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "warna 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "warna 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "nisbah";
Blockly.Msg.COLOUR_BLEND_TITLE = "adun";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Campurkan dua warna sekali pada nisbah yang ditentukan (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://ms.wikipedia.org/wiki/Warna";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Pilih satu warna daripada palet.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "warna rawak";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Pilih satu warna secara rawak.";
Blockly.Msg.COLOUR_RGB_BLUE = "biru";
Blockly.Msg.COLOUR_RGB_GREEN = "hijau";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "merah";
Blockly.Msg.COLOUR_RGB_TITLE = "warnakan";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Peroleh satu warna dengan menentukan amaun campuran merah, hijau dan biru. Kesemua nilai haruslah antara 0 hingga 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "Keluar daripada gelung lingkaran";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "Teruskan dengan pengulangan seterusnya gelung";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Pecahkan kandungan lingkaran.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Langkau seluruh gelung ini, dan teruskan dengan lelaran seterusnya.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Amaran: Blok ini hanya boleh digunakan dalam satu lingkaran.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each untuk setiap blok";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "dalam senarai";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "untuk setiap perkara";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Untuk setiap perkara dalam senarai, tetapkan pembolehubah '%1' pada perkara, kemudian lakukan beberapa perintah.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "dari %1 hingga %2 selang %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "kira dengan";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Gunakan pembolehubah %1 pada nilai-nilai dari nombor pangkal hingga nombor hujung, mengira mengikut selang yang ditentukan, dan lakukan blok-blok yang tertentu.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Tambah satu syarat kepada blok jika.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Tambah yang terakhir, alihkan semua keadaan ke blok jika.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Tambah, alih keluar, atau susun semula bahagian-bahagian untuk menyusun semula blok jika.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "lain";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "lain jika";
Blockly.Msg.CONTROLS_IF_MSG_IF = "jika";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Jika nilai yang benar, lakukan beberapa penyata.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Jika suatu nilai benar, lakukan penyata blok pertama.  Jika tidak, bina penyata blok kedua.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Jika nilai yang pertama adalah benar, lakukan penyata pertama blok.  Sebaliknya, jika nilai kedua adalah benar, lakukan penyata blok kedua.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Jika nilai yang pertama adalah benar, lakukan penyata blok pertama.  Sebaliknya, jika nilai kedua adalah benar, lakukan penyata blok kedua.  Jika tiada nilai adalah benar, lakukan penyata blok terakhir.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "lakukan";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "ulang %1 kali";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "ulang";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "kali";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Lakukan perintah berulang kali.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "ulangi sehingga";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "ulangi apabila";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Lakukan beberapa perintah apabila nilainya palsu (false).";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Lakukan beberapa perintah apabila nilainya benar (true).";
Blockly.Msg.DELETE_BLOCK = "Hapuskan Blok";
Blockly.Msg.DELETE_X_BLOCKS = "Hapuskan %1 Blok";
Blockly.Msg.DISABLE_BLOCK = "Matikan Blok";
Blockly.Msg.DUPLICATE_BLOCK = "Pendua";
Blockly.Msg.ENABLE_BLOCK = "Hidupkan Blok";
Blockly.Msg.EXPAND_ALL = "Buka Blok²";
Blockly.Msg.EXPAND_BLOCK = "Buka Blok";
Blockly.Msg.EXTERNAL_INPUTS = "Input Luaran";
Blockly.Msg.HELP = "Bantuan";
Blockly.Msg.INLINE_INPUTS = "Input Sebaris";
Blockly.Msg.KF_ANIMATION_BOOLEAN_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_BOOLEAN_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_CURRENT_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_CURRENT_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_CURRENT_TOOLTIP = "Returns the current animation that is playing on this game object.";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_MESSAGE_AFTER = "animation frame";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_MESSAGE_BEFORE = "goto";  // untranslated
Blockly.Msg.KF_ANIMATION_FRAME_TOOLTIP = "Goes to the selected frame in the current animation. If at the end of an animation it will go to the first frame, or the start if at the end.";  // untranslated
Blockly.Msg.KF_ANIMATION_NUMBERS_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_NUMBERS_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_NUMBERS_TOOLTIP = "Returns a number related to the selected field..";  // untranslated
Blockly.Msg.KF_ANIMATION_PLAY_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_PLAY_MESSAGE = "play animation";  // untranslated
Blockly.Msg.KF_ANIMATION_PLAY_TOOLTIP = "Starts playing an animation on this gameobject.";  // untranslated
Blockly.Msg.KF_ANIMATION_STATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_ANIMATION_STATE_MESSAGE = "current animation";  // untranslated
Blockly.Msg.KF_ANIMATION_STATE_TOOLTIP = " The state of the current animation.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_BOOLEAN_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_BOOLEAN_TOOLTIP = "Returns the state of a property selected.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_MESSAGE_AFTER = "side";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_MESSAGE_BEFORE = "on";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_COLLISIONS_TOOLTIP = "Returns a Boolean indiciating the state of the selected statement for this gameobject.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_GRAVITY_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_GRAVITY_MESSAGE = "gravity";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_GRAVITY_TOOLTIP = "Returns the selected gravity value.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_NUMERIC_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_GET_NUMERIC_TOOLTIP = "Returns a value for the selected property.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_MESSAGE_ONE = "collidable object of";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_MESSAGE_THREE = "and is on the layer";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_MESSAGE_TWO = "side exists at";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_LAYER_TOOLTIP = "Returns a boolean indiciating if a colliable object (with the collision shape AND layer as passed) exists at the coordinates passed.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_MESSAGE = "collidable object exists at";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_PROBE_TOOLTIP = "Returns a boolean indiciating if a colliable object exists at the cooridnates passed. ";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_BOOLEAN_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_BOOLEAN_MESSAGE = "set";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_BOOLEAN_TOOLTIP = "Sets a boolean property selected.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_MESSAGE_AFTER = "side collisions to";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_MESSAGE_BEFORE = "set";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_COLLISIONS_TOOLTIP = "Sets the sides of this gameobject that can collide with other gameobjects.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_GRAVITY_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_GRAVITY_MESSAGE = "set gravity";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_GRAVITY_TOOLTIP = "Sets the global gravity property to a value passed.";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_NUMERIC_HELPURL = "";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_NUMERIC_MESSAGE = "set";  // untranslated
Blockly.Msg.KF_ARCADEPHYSICS_SET_NUMERIC_TOOLTIP = "Sets a numeric property selected.";  // untranslated
Blockly.Msg.KF_BLOCK_DEPRECATED = "Warning: This block is being discontinued";  // untranslated
Blockly.Msg.KF_CAMERA_CENTER_ON_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_CENTER_ON_INSTANCE_MESSAGE = "center camera on";  // untranslated
Blockly.Msg.KF_CAMERA_CENTER_ON_INSTANCE_TOOLTIP = "Centers the cameras to the instances current position.";  // untranslated
Blockly.Msg.KF_CAMERA_GET_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_GET_MESSAGE = "camera";  // untranslated
Blockly.Msg.KF_CAMERA_GET_READ_ONLY_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_GET_READ_ONLY_MESSAGE = "camera";  // untranslated
Blockly.Msg.KF_CAMERA_GET_READ_ONLY_TOOLTIP = "Returns a selected read only property on the camera.";  // untranslated
Blockly.Msg.KF_CAMERA_GET_SPEED_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_GET_SPEED_MESSAGE = "camera pan speed";  // untranslated
Blockly.Msg.KF_CAMERA_GET_SPEED_TOOLTIP = "Returns the cameras pan speed.";  // untranslated
Blockly.Msg.KF_CAMERA_GET_TOOLTIP = "Returns a selected property on the camera.";  // untranslated
Blockly.Msg.KF_CAMERA_LOCK_ON_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_LOCK_ON_MESSAGE = "lock camera on";  // untranslated
Blockly.Msg.KF_CAMERA_LOCK_ON_TOOLTIP = "Locks the camera to an Instance passed.";  // untranslated
Blockly.Msg.KF_CAMERA_PAN_TO_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_PAN_TO_MESSAGE = "camera to";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_GET_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_GET_MESSAGE = "camera scale";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_GET_TOOLTIP = "Returns the values for the cameras scale on the selected axis.";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_MESSAGE = "camera scale";  // untranslated
Blockly.Msg.KF_CAMERA_SCALE_TOOLTIP = "Sets the camera scale on the selected axis to a value passed.";  // untranslated
Blockly.Msg.KF_CAMERA_SET_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SET_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_CAMERA_SET_MESSAGE_BEFORE = "set camera";  // untranslated
Blockly.Msg.KF_CAMERA_SET_SPEED_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_SET_SPEED_MESSAGE = "set camera pan speed";  // untranslated
Blockly.Msg.KF_CAMERA_SET_SPEED_TOOLTIP = "Sets the cameras pan speed to a value passed.";  // untranslated
Blockly.Msg.KF_CAMERA_SET_TOOLTIP = "Sets a selected property on the camera to the value passed.";  // untranslated
Blockly.Msg.KF_CAMERA_STATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_STATE_MESSAGE = "is camera";  // untranslated
Blockly.Msg.KF_CAMERA_STATE_TOOLTIP = "Returns true if the statement is correct.";  // untranslated
Blockly.Msg.KF_CAMERA_UNLOCK_HELPURL = "";  // untranslated
Blockly.Msg.KF_CAMERA_UNLOCK_MESSAGE = "unlock camera";  // untranslated
Blockly.Msg.KF_CAMERA_UNLOCK_TOOLTIP = "Unlocks the camera.";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_MESSAGE_AFTER = "at";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_MESSAGE_BEFORE = "create new instance of";  // untranslated
Blockly.Msg.KF_CLASSES_CREATE_INSTANCE_TOOLTIP = "Creates a new instance of a class type at the location specified.";  // untranslated
Blockly.Msg.KF_CLASSES_GET_ALL_INSTANCES_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_GET_ALL_INSTANCES_MESSAGE = "get all instances of";  // untranslated
Blockly.Msg.KF_CLASSES_GET_ALL_INSTANCES_TOOLTIP = "Returns a list of all the instances with that class.";  // untranslated
Blockly.Msg.KF_CLASSES_GET_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_GET_INSTANCE_MESSAGE = "instance of";  // untranslated
Blockly.Msg.KF_CLASSES_GET_INSTANCE_TOOLTIP = "Selects the corresponding instance.";  // untranslated
Blockly.Msg.KF_CLASSES_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_INSTANCE_MESSAGE = "class of";  // untranslated
Blockly.Msg.KF_CLASSES_INSTANCE_TOOLTIP = "Returns the class of the selected instance.";  // untranslated
Blockly.Msg.KF_CLASSES_SELECTOR_HELPURL = "";  // untranslated
Blockly.Msg.KF_CLASSES_SELECTOR_TOOLTIP = "Returns the class selected.";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_MESSAGE_AFTER = "has";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_MESSAGE_BEFORE = "When the animation";  // untranslated
Blockly.Msg.KF_EVENT_ANIMATION_TOOLTIP = "Fires events when a selected event occurs on the animation passed.";  // untranslated
Blockly.Msg.KF_EVENT_CONSTANTLY_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_CONSTANTLY_MESSAGE = "Constantly";  // untranslated
Blockly.Msg.KF_EVENT_CONSTANTLY_TOOLTIP = "The event triggered every frame";  // untranslated
Blockly.Msg.KF_EVENT_CREATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_CREATE_MESSAGE = "When created";  // untranslated
Blockly.Msg.KF_EVENT_CREATE_TOOLTIP = "The event triggered when this game object is created";  // untranslated
Blockly.Msg.KF_EVENT_INST_INPUT_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_INST_INPUT_MESSAGE = "When the player ";  // untranslated
Blockly.Msg.KF_EVENT_INST_INPUT_TOOLTIP = "The event is triggered when the player releases/presses (click/touch) a given instance";  // untranslated
Blockly.Msg.KF_EVENT_INST_PRESS_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_INST_PRESS_MESSAGE = "When the player presses on ";  // untranslated
Blockly.Msg.KF_EVENT_INST_PRESS_TOOLTIP = "The event triggered when the player presses a click/touch on the given instance.";  // untranslated
Blockly.Msg.KF_EVENT_INST_RELEASE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_INST_RELEASE_MESSAGE = "When the player releases over ";  // untranslated
Blockly.Msg.KF_EVENT_INST_RELEASE_TOOLTIP = "The event triggered when the player releases a click/touch on the given instance.";  // untranslated
Blockly.Msg.KF_EVENT_KEY_INPUT_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_KEY_INPUT_MESSAGE = "When the player";  // untranslated
Blockly.Msg.KF_EVENT_KEY_INPUT_TOOLTIP = "The event is triggered when the player presses/releases the given key on their keyboard.";  // untranslated
Blockly.Msg.KF_EVENT_KEY_PRESS_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_KEY_PRESS_MESSAGE = "When the player presses";  // untranslated
Blockly.Msg.KF_EVENT_KEY_PRESS_TOOLTIP = "The event triggered when the player presses the given key on their keyboard.";  // untranslated
Blockly.Msg.KF_EVENT_KEY_RELEASE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_KEY_RELEASE_MESSAGE = "When the player releases";  // untranslated
Blockly.Msg.KF_EVENT_KEY_RELEASE_TOOLTIP = "The event triggered when the player releases the given key on their keyboard.";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_MESSAGE_AFTER = "is retrieved";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_MESSAGE_BEFORE = "When a message of";  // untranslated
Blockly.Msg.KF_EVENT_MESSAGE_TOOLTIP = "Send events when the player";  // untranslated
Blockly.Msg.KF_EVENT_REMOVE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_REMOVE_MESSAGE = "When removed";  // untranslated
Blockly.Msg.KF_EVENT_REMOVE_TOOLTIP = "The event is triggered when this gameobject is destroyed.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_INPUT_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_INPUT_MESSAGE = "When the stage is";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_INPUT_TOOLTIP = "The event is trggered when the player either pressed or releases anywhere in the game scene.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_PRESS_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_PRESS_MESSAGE = "When stage is pressed";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_PRESS_TOOLTIP = "The event triggered when the player presses a click/touch down anywhere in the game scene.";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_RELEASE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_RELEASE_MESSAGE = "When stage is released";  // untranslated
Blockly.Msg.KF_EVENT_STAGE_RELEASE_TOOLTIP = "The event triggered when the player releases a click/touch anywhere in the game scene.";  // untranslated
Blockly.Msg.KF_EVENT_TIME_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_TIME_MESSAGE_AFTER = "milliseconds";  // untranslated
Blockly.Msg.KF_EVENT_TIME_SINGLE_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_TIME_SINGLE_MESSAGE_AFTER = "milliseconds have passed";  // untranslated
Blockly.Msg.KF_EVENT_TIME_SINGLE_TOOLTIP = "Triggers the inner blocks after the set period of time has occured. Warning: Does not check to see if the object was destroyed before the event fires.";  // untranslated
Blockly.Msg.KF_EVENT_TIME_TOOLTIP = "Triggers the event when the number of milliseconds set has passed. The number of milliseconds passed is not dynamic, meaning that it will not update once set.";  // untranslated
Blockly.Msg.KF_EVENT_TOUCH_ON_HELPURL = "";  // untranslated
Blockly.Msg.KF_EVENT_TOUCH_ON_MESSAGE = "When I am touched by";  // untranslated
Blockly.Msg.KF_EVENT_TOUCH_ON_TOOLTIP = "Triggers the inner blocks when this instance collides with the instance passed.";  // untranslated
Blockly.Msg.KF_GAME_GET_TIME_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_GET_TIME_MESSAGE = "time";  // untranslated
Blockly.Msg.KF_GAME_GET_TIME_TOOLTIP = "Returns the associate time method associated.";  // untranslated
Blockly.Msg.KF_GAME_GOTO_LEVEL_NUM_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_GOTO_LEVEL_NUM_MESSAGE = "go to";  // untranslated
Blockly.Msg.KF_GAME_GOTO_LEVEL_NUM_TOOLTIP = "Changes the current level to the level specified.";  // untranslated
Blockly.Msg.KF_GAME_LEVEL_SPECIAL_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_LEVEL_SPECIAL_TOOLTIP = "A list of special levels, they include previous/current/next and the first/last levels.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_COLOUR_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_COLOUR_MESSAGE = "stage colour";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_COLOUR_TOOLTIP = "Gets the colour of the game background.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_SIZE_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_GET_SIZE_TOOLTIP = "Gets the size of the games viewport on the screen.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_COLOUR_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_COLOUR_MESSAGE = "set stage colour to";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_COLOUR_TOOLTIP = "Sets the colour of the game background.";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_SIZE_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_STAGE_SET_SIZE_TOOLTIP = "Sets the size of the games viewport on the screen.";  // untranslated
Blockly.Msg.KF_GAME_TIME_METHOD_HELPURL = "";  // untranslated
Blockly.Msg.KF_GAME_TIME_METHOD_MESSAGE = "time";  // untranslated
Blockly.Msg.KF_GAME_TIME_METHOD_TOOLTIP = "Pauses or resumes the clock, thus pausing/resume gameplay.";  // untranslated
Blockly.Msg.KF_INPUT_MOUSE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INPUT_MOUSE_MESSAGE = "of mouse";  // untranslated
Blockly.Msg.KF_INPUT_MOUSE_TOOLTIP = "The position of the mouse in the current level";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_MESSAGE_BEFORE = "tag";  // untranslated
Blockly.Msg.KF_INSTANCE_ADD_TAG_TOOLTIP = "Adds a tag passed to the given gameobject.";  // untranslated
Blockly.Msg.KF_INSTANCE_DEATH_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_DEATH_MESSAGE = "destroy";  // untranslated
Blockly.Msg.KF_INSTANCE_DEATH_TOOLTIP = "Destroys the selected instance. Destruction cannot be reverted!";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_ALL_BY_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_ALL_BY_TAG_MESSAGE = "get all children by tag";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_ALL_BY_TAG_TOOLTIP = "Returns a list of all the instances that have the tag passed.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_BY_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_BY_TAG_MESSAGE = "instance by tag";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_BY_TAG_TOOLTIP = "Returns a single instance by the tag passed.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_TOOLTIP = "Gets the value of a selected property of the given instance.";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_VISIBLE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_VISIBLE_MESSAGE = "get visibility of";  // untranslated
Blockly.Msg.KF_INSTANCE_GET_VISIBLE_TOOLTIP = "Returns visibility state of this gameobject. An alpha of zero is does not mean that the visiblity is false.";  // untranslated
Blockly.Msg.KF_INSTANCE_HAS_TAG_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_HAS_TAG_MESSAGE = "has tag";  // untranslated
Blockly.Msg.KF_INSTANCE_HAS_TAG_TOOLTIP = "Returns a boolean indicating if the gameobject has the tag or not.";  // untranslated
Blockly.Msg.KF_INSTANCE_MOVE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_MOVE_TOOLTIP = "Changes the depth (layer ordering) of an instance passed by the selected dropdown method.";  // untranslated
Blockly.Msg.KF_INSTANCE_SELECT_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SELECT_MESSAGE = "instance ";  // untranslated
Blockly.Msg.KF_INSTANCE_SELECT_TOOLTIP = "Selects a game object with the corresponding id.";  // untranslated
Blockly.Msg.KF_INSTANCE_SELF_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SELF_MESSAGE = "myself";  // untranslated
Blockly.Msg.KF_INSTANCE_SELF_TOOLTIP = "The game object that this script is attached to.";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_TOOLTIP = "Sets the selected property of a given instance to a new value.";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_HELPURL = "";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_MESSAGE_BEFORE = "set visibility of";  // untranslated
Blockly.Msg.KF_INSTANCE_SET_VISIBLE_TOOLTIP = "Sets whether the gameobject should be renderer or not. An alpha of zero is does not mean that the visiblity is false.";  // untranslated
Blockly.Msg.KF_INTERSECTS_CONTAINS_HELPURL = "";  // untranslated
Blockly.Msg.KF_INTERSECTS_CONTAINS_MESSAGE = "contains";  // untranslated
Blockly.Msg.KF_INTERSECTS_OVERLAPS_HELPURL = "";  // untranslated
Blockly.Msg.KF_INTERSECTS_OVERLAPS_MESSAGE = "overlaps";  // untranslated
Blockly.Msg.KF_INTERSECTS_OVERLAPS_TOOLTIP = "Checks to see if the two passed instances overlap.";  // untranslated
Blockly.Msg.KF_KEY_SPECIAL_HELPURL = "";  // untranslated
Blockly.Msg.KF_KEY_SPECIAL_MESSAGE = "key:";  // untranslated
Blockly.Msg.KF_KEY_SPECIAL_TOOLTIP = "A special keyboard key";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_BEFORE = "from";  // untranslated
Blockly.Msg.KF_MATH_INSTANCE_TOOLTIP = "Returns the selected value between two instances.";  // untranslated
Blockly.Msg.KF_MATH_UTILS_HELPURL = "";  // untranslated
Blockly.Msg.KF_MATH_UTILS_TOOLTIP = "";  // untranslated
Blockly.Msg.KF_MATH_XY_TO_XY_HELPURL = "";  // untranslated
Blockly.Msg.KF_MATH_XY_TO_XY_TOOLTIP = "Returns the selected value between an instance and a set of coordinates passed.";  // untranslated
Blockly.Msg.KF_MESSAGING_CLASS_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_CLASS_MESSAGE_AFTER = "to all";  // untranslated
Blockly.Msg.KF_MESSAGING_CLASS_TOOLTIP = "Sends a message to all instances of a class you pass.";  // untranslated
Blockly.Msg.KF_MESSAGING_EVERYONE_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_EVERYONE_MESSAGE = "send every gameobject a message of";  // untranslated
Blockly.Msg.KF_MESSAGING_EVERYONE_TOOLTIP = "Sends a message to every gameobject.";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_MESSAGE_AFTER = "to";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_MESSAGE_BEFORE = "send message";  // untranslated
Blockly.Msg.KF_MESSAGING_INSTANCE_TOOLTIP = "Sends a message to a singular instance you passed.";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_HELPURL = "";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_MESSAGE_AFTER = "to each instance in";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_MESSAGE_BEFORE = "send message";  // untranslated
Blockly.Msg.KF_MESSAGING_LIST_TOOLTIP = "Sends a message to every instance in a list.";  // untranslated
Blockly.Msg.KF_SOUND_BACKGROUND_STATE_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_BACKGROUND_STATE_MESSAGE = "music";  // untranslated
Blockly.Msg.KF_SOUND_BACKGROUND_STATE_TOOLTIP = "Pauses or resumes the current background track.";  // untranslated
Blockly.Msg.KF_SOUND_GET_MUTE_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_GET_MUTE_MESSAGE = "mute";  // untranslated
Blockly.Msg.KF_SOUND_GET_MUTE_TOOLTIP = "Sets the mute state of the selected piece of audio by a boolean passed.";  // untranslated
Blockly.Msg.KF_SOUND_GET_VOLUME_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_GET_VOLUME_MESSAGE = "get volume";  // untranslated
Blockly.Msg.KF_SOUND_GET_VOLUME_TOOLTIP = "Gets the volume of all sounds played. A number from 0 - 100.";  // untranslated
Blockly.Msg.KF_SOUND_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_BACKGROUND_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_BACKGROUND_MESSAGE = "play music";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_BACKGROUND_TOOLTIP = "Starts playing the specified music from the beginning.";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_EFFECT_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_EFFECT_MESSAGE = "play sound effect";  // untranslated
Blockly.Msg.KF_SOUND_PLAY_EFFECT_TOOLTIP = "Plays the given sound effect once.";  // untranslated
Blockly.Msg.KF_SOUND_SET_MUTE_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_SET_MUTE_MESSAGE = "mute";  // untranslated
Blockly.Msg.KF_SOUND_SET_MUTE_TOOLTIP = "Sets the mute state of the selected piece of audio by a boolean passed.";  // untranslated
Blockly.Msg.KF_SOUND_SET_VOLUME_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_SET_VOLUME_MESSAGE = "set volume";  // untranslated
Blockly.Msg.KF_SOUND_SET_VOLUME_TOOLTIP = "Sets the volume of all sounds played. A number from 0 - 100.";  // untranslated
Blockly.Msg.KF_SOUND_STOP_BACKGROUND_HELPURL = "";  // untranslated
Blockly.Msg.KF_SOUND_STOP_BACKGROUND_MESSAGE = "stop the current music";  // untranslated
Blockly.Msg.KF_SOUND_STOP_BACKGROUND_TOOLTIP = "Stops playing the current music and clears the playhead. If resumed it will start from the beginning.";  // untranslated
Blockly.Msg.KF_SOUND_TOOLTIP = "A list of all the sounds included in the game.";  // untranslated
Blockly.Msg.KF_TYPE_BOOLEAN = "True/False";  // untranslated
Blockly.Msg.KF_TYPE_INSTANCE = "Instance";  // untranslated
Blockly.Msg.KF_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.KF_TYPE_STRING = "Text";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "Wujudkan senarai kosong";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Kembalikan senarai panjang 0, yang tidak mengandungi rekod data";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "senarai";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Tambah, alih keluar, atau susun semula bahagian-bahagian untuk menyusun semula senarai blok.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "wujudkan senarai dengan";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Tambah item ke dalam senarai.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Wujudkan senarai dengan apa jua nombor item.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "pertama";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# dari akhir";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "dapatkan";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "dapat dan alihkan";
Blockly.Msg.LISTS_GET_INDEX_LAST = "terakhir";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "rawak";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "alihkan";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Kembalikan item pertama dalam senarai.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Kembalikan item dalam kedudukan yang ditetapkan dalam senarai. #1 ialah item terakhir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Kembalikan item dalam kedudukan yang ditetapkan dalam senarai. #1 ialah item terakhir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Kembalikan item pertama dalam senarai.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Kembalikan item rawak dalam senarai.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Alihkan dan kembalikan item pertama dalam senarai.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Alihkan dan kembalikan item mengikut spesifikasi posisi dalam senarai. #1 ialah item terakhir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Alihkan dan kembalikan item mengikut spesifikasi posisi dalam senarai. #1 ialah item pertama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Alihkan dan kembalikan item terakhir dalam senarai.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Alihkan dan kembalikan item rawak dalam senarai.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Alihkan item pertama dalam senarai.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Alihkan item mengikut spesifikasi posisi dalam senarai. #1 ialah item terakhir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Alihkan item pada posisi mengikut spesifikasi dalam senarai. #1 ialah item pertama.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Alihkan item terakhir dalam senarai.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Alihkan item rawak dalam senarai.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "ke  # dari akhir";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "ke #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "ke akhir";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "dapatkan sub-senarai daripada pertama";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "dapatkan sub-senarai daripada # daripada terakhir";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "dapatkan sub-senarai daripada #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Wujudkan salinan bahagian yang ditentukan dari senarai.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "cari pertama item kejadian";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "cari kejadian akhir item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Kembalikan indeks kejadian pertama/terakhir item dalam senarai. Kembalikan 0 jika teks tidak ditemui.";
Blockly.Msg.LISTS_INLIST = "dalam senarai";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 adalah kosong";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "panjang %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Kembalikan panjang senarai";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "wujudkan senarai dengan item %1 diulangi %2 kali";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Wujudkan senarai yang terdiri daripada nilai berulang mengikut nombor yang ditentukan.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "sebagai";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "masukkan pada";
Blockly.Msg.LISTS_SET_INDEX_SET = "set";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Selit item pada permulaan senarai.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Masukkan item pada posisi yang ditentukan dalam senarai. #1 ialah item terakhir.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Masukkan item pada posisi yand ditentukan dalam senarai. #1 ialah item terakhir.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Tambahkan item dalam senarai akhir.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Selit item secara rawak di dalam senarai.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Set item pertama dalam senarai.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Masukkan item pada posisi yang ditentukan dalam senarai. #1 ialah item terakhir.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Masukkan item pada posisi yang ditentukan dalam senarai. #1 ialah item terakhir.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Set item terakhir dalam senarai.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Set item rawak dalam senarai.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "buat senarai dgn teks";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "buat teks drpd senarai";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Cantumkan senarai teks menjadi satu teks, dipecahkan oleh delimiter.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Pecahkan teks kepada senarai teks, berpecah di setiap delimiter.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "dengan delimiter";
Blockly.Msg.LISTS_TOOLTIP = "Kembalikan benar jika senarai kosong.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "palsu";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Kembalikan samada benar atau palsu.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "benar";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://id.wikipedia.org/wiki/Pertidaksamaan";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Kembali benar jika kedua-dua input benar antara satu sama lain.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Kembali benar jika input pertama adalah lebih besar daripada input kedua.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Kembali benar jika input pertama adalah lebih besar daripada atau sama dengan input kedua.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Kembali benar jika input pertama adalah lebih kecil daripada input kedua.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Kembali benar jika input pertama adalah lebih kecil daripada atau sama dengan input kedua.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Taip balik benar jika kedua-dua input tidak sama.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "bukan %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "'Benar' akan dibalas jika inputnya salah. 'Salah' akan dibalas jika inputnya benar.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";
Blockly.Msg.LOGIC_OPERATION_AND = "dan";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "atau";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "Jika palsu";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "Jika benar";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://ms.wikipedia.org/wiki/Aritmetik";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Taip balik hasil bahagi dua nombor tersebut.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Taip balik hasil tolak dua nombor tersebut.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Taip balik hasil darab dua nombor tersebut.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://id.wikipedia.org/wiki/Perjumlahan";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "oleh";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "perubahan";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Tambah nombor kepada pembolehubah '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://ms.wikipedia.org/wiki/Pemalar_matematik";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "Boleh dibahagikan dengan";
Blockly.Msg.MATH_IS_EVEN = "Adalah genap";
Blockly.Msg.MATH_IS_NEGATIVE = "negatif";
Blockly.Msg.MATH_IS_ODD = "aneh";
Blockly.Msg.MATH_IS_POSITIVE = "adalah positif";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number.  Returns true or false.";
Blockly.Msg.MATH_IS_WHOLE = "is whole";
Blockly.Msg.MATH_MODULO_HELPURL = "https://id.wikipedia.org/wiki/Operasi_modulus";
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Taip balik baki yang didapat daripada pembahagian dua nombor tersebut.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://ms.wikipedia.org/wiki/Nombor";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Suatu nombor.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "purata daripada senarai";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "Max senarai";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "Median senarai";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min dalam senarai";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "jenis senarai";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "Item rawak daripada senarai";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "sisihan piawai bagi senarai";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "Jumlah senarai";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Kembalikan purata (min aritmetik) nilai-nilai angka di dalam senarai.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Pulangkan jumlah terbesar dalam senarai.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Kembalikan nombor median dalam senarai.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Kembalikan nombor terkecil dalam senarai.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Kembali senarai item yang paling biasa dalam senarai.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Kembalikan elemen rawak daripada senarai.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Kembali dengan sisihan piawai daripada senarai.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Kembalikan jumlah semua nombor dalam senarai.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "pecahan rawak";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Kembali sebahagian kecil rawak antara 0.0 (inklusif) dan 1.0 (eksklusif).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "integer rawak dari %1ke %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Kembalikan integer rawak diantara dua had yang ditentukan, inklusif.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "pusingan";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "Pusingan ke bawah";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "pusingan ke atas";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Bulat nombor yang naik atau turun.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://ms.wikipedia.org/wiki/Punca_kuasa_dua";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "mutlak";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "Punca kuasa dua";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Kembalikan nilai mutlak suatu nombor.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Kembalikan e kepada kuasa nombor.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Kembali dalam logaritma nombor asli.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Kembali logarithm 10 asas nombor.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Kembalikan nombor yang songsang.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Kembalikan 10 kepada kuasa nombor.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Kembalikan punca kuasa nombor.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://ms.wikipedia.org/wiki/Fungsi_trigonometri";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Kembali arccosine beberapa nombor.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Kembalikan arcsince beberapa nombor.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Kembalikan beberapa nombor arctangent.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Kembalikan darjah kosinus (bukan radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Kembalikan darjah sine (bukan radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Kembalikan darjah tangen (bukan radian).";
Blockly.Msg.ME = "Saya";
Blockly.Msg.NEW_VARIABLE = "Pembolehubah baru...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nama pembolehubah baru:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "bolehkan kenyataan";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "dengan:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://ms.wikipedia.org/wiki/Fungsi";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://ms.wikipedia.org/wiki/Fungsi";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "dengan:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Hasilkan '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "Buat sesuatu";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "Untuk";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Menghasilkan suatu fungsi tanpa output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "kembali";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Mencipta satu fungsi dengan pengeluaran.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Amaran: Fungsi ini mempunyai parameter yang berganda.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Serlahkan definisi fungsi";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Amaran: Blok ini hanya boleh digunakan dalam fungsi definisi.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "Nama input:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Tambah satu input pada fungsi.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "Input-input";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Tambah, alih keluar atau susun semula input pada fungsi ini.";
Blockly.Msg.REMOVE_COMMENT = "Padamkan Komen";
Blockly.Msg.RENAME_VARIABLE = "Tukar nama pembolehubah...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Tukar nama semua pembolehubah '%1' kepada:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "Untuk";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "Kepada huruf kecil";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "Kepada HURUF BESAR";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "Dalam teks";
Blockly.Msg.TEXT_CHARAT_LAST = "Dapatkan abjad terakhir";
Blockly.Msg.TEXT_CHARAT_RANDOM = "Dapatkan abjad rawak";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "Sertai";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "untuk huruf terakhir";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "dalam teks";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "dalam teks";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "mencari kejadian pertama teks";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "mencari kejadian terakhir teks";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Kembalikan Indeks kejadian pertama/terakhir dari teks pertama ke dalam teks kedua.  Kembalikan 0 Jika teks tidak ditemui.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 adalah kosong";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Kembalikan benar jika teks yang disediakan adalah kosong.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "hasilkan teks dengan";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Hasilkan sebahagian teks dengan menghubungkan apa jua nombor item.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "panjang %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Kembalikan jumlah huruf (termasuk ruang) dalam teks yang disediakan.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "cetak %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Cetak teks yang ditentukan, nombor atau nilai lain.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Peringatan kepada pengguna untuk nombor.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Peringatkan pengguna untuk sebahagian teks.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "Prom untuk nombor dengan mesej";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "Prom untuk teks dengan mesej";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://ms.wikipedia.org/wiki/Rentetan";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Huruf, perkataan, atau baris teks.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "mengurangkan kawasan dari kedua-dua belah";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "mengurangkan ruang dari sebelah kiri";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "mengurangkan kawasan dari sisi kanan";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Kembali salinan teks dengan ruang yang dikeluarkan daripada satu atau hujung kedua belah.";
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "Perkara";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Hasilkan 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TITLE = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Kembalikan nilai pemboleh ubah ini.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Hasilkan 'set %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TAIL = "ke";
Blockly.Msg.VARIABLES_SET_TITLE = "set";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Set pembolehubah ini supaya sama dengan input.";
Blockly.Msg.VARIABLES_TYPE_ANY = "any";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY = "list";  // untranslated
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "true/false";  // untranslated
Blockly.Msg.VARIABLES_TYPE_CLASS = "class";  // untranslated
Blockly.Msg.VARIABLES_TYPE_COLOUR = "colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_INSTANCE = "instance";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_SOUND = "sound";  // untranslated
Blockly.Msg.VARIABLES_TYPE_STRING = "text";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.KF_MATH_XY_TO_XY_MESSAGE_AFTER = Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_AFTER;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.KF_MATH_XY_TO_XY_MESSAGE_BEFORE = Blockly.Msg.KF_MATH_INSTANCE_MESSAGE_BEFORE;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;